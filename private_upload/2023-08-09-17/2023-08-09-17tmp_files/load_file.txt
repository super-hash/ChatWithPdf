filepath=private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf,len=48
page_content='Attention Is All You Need\nAshish Vaswani\x03\nGoogle Brain\navaswani@google.comNoam Shazeer\x03\nGoogle Brain\nnoam@google.comNiki Parmar\x03\nGoogle Research\nnikip@google.comJakob Uszkoreit\x03\nGoogle Research\nusz@google.com\nLlion Jones\x03\nGoogle Research\nllion@google.comAidan N. Gomez\x03y\nUniversity of Toronto\naidan@cs.toronto.eduŁukasz Kaiser\x03\nGoogle Brain\nlukaszkaiser@google.com\nIllia Polosukhin\x03z\nillia.polosukhin@gmail.com\nAbstract\nThe dominant sequence transduction models are based on complex recurrent or\nconvolutional neural networks that include an encoder and a decoder. The best\nperforming models also connect the encoder and decoder through an attention\nmechanism. We propose a new simple network architecture, the Transformer,\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experiments on two machine translation tasks show these models to\nbe superior in quality while being more parallelizable and requiring signiﬁcantly' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 0}
page_content='based solely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experiments on two machine translation tasks show these models to\nbe superior in quality while being more parallelizable and requiring signiﬁcantly\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\nto-German translation task, improving over the existing best results, including\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\nour model establishes a new single-model state-of-the-art BLEU score of 41.0 after\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\nbest models from the literature.\n1 Introduction\nRecurrent neural networks, long short-term memory [ 12] and gated recurrent [ 7] neural networks\nin particular, have been ﬁrmly established as state of the art approaches in sequence modeling and\ntransduction problems such as language modeling and machine translation [ 29,2,5]. Numerous' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 0}
page_content='Recurrent neural networks, long short-term memory [ 12] and gated recurrent [ 7] neural networks\nin particular, have been ﬁrmly established as state of the art approaches in sequence modeling and\ntransduction problems such as language modeling and machine translation [ 29,2,5]. Numerous\nefforts have since continued to push the boundaries of recurrent language models and encoder-decoder\narchitectures [31, 21, 13].\n\x03Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the ﬁrst Transformer models and\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\nattention and the parameter-free position representation and became the other person involved in nearly every\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 0}
page_content='attention and the parameter-free position representation and became the other person involved in nearly every\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\nefﬁcient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\nour research.\nyWork performed while at Google Brain.\nzWork performed while at Google Research.\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 0}
page_content='Recurrent models typically factor computation along the symbol positions of the input and output\nsequences. Aligning the positions to steps in computation time, they generate a sequence of hidden\nstatesht, as a function of the previous hidden state ht\x001and the input for position t. This inherently\nsequential nature precludes parallelization within training examples, which becomes critical at longer\nsequence lengths, as memory constraints limit batching across examples. Recent work has achieved\nsigniﬁcant improvements in computational efﬁciency through factorization tricks [ 18] and conditional\ncomputation [ 26], while also improving model performance in case of the latter. The fundamental\nconstraint of sequential computation, however, remains.\nAttention mechanisms have become an integral part of compelling sequence modeling and transduc-\ntion models in various tasks, allowing modeling of dependencies without regard to their distance in' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='constraint of sequential computation, however, remains.\nAttention mechanisms have become an integral part of compelling sequence modeling and transduc-\ntion models in various tasks, allowing modeling of dependencies without regard to their distance in\nthe input or output sequences [ 2,16]. In all but a few cases [ 22], however, such attention mechanisms\nare used in conjunction with a recurrent network.\nIn this work we propose the Transformer, a model architecture eschewing recurrence and instead\nrelying entirely on an attention mechanism to draw global dependencies between input and output.\nThe Transformer allows for signiﬁcantly more parallelization and can reach a new state of the art in\ntranslation quality after being trained for as little as twelve hours on eight P100 GPUs.\n2 Background\nThe goal of reducing sequential computation also forms the foundation of the Extended Neural GPU' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='translation quality after being trained for as little as twelve hours on eight P100 GPUs.\n2 Background\nThe goal of reducing sequential computation also forms the foundation of the Extended Neural GPU\n[20], ByteNet [ 15] and ConvS2S [ 8], all of which use convolutional neural networks as basic building\nblock, computing hidden representations in parallel for all input and output positions. In these models,\nthe number of operations required to relate signals from two arbitrary input or output positions grows\nin the distance between positions, linearly for ConvS2S and logarithmically for ByteNet. This makes\nit more difﬁcult to learn dependencies between distant positions [ 11]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='reduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence. Self-attention has been\nused successfully in a variety of tasks including reading comprehension, abstractive summarization,\ntextual entailment and learning task-independent sentence representations [4, 22, 23, 19].\nEnd-to-end memory networks are based on a recurrent attention mechanism instead of sequence-\naligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks [28].\nTo the best of our knowledge, however, the Transformer is the ﬁrst transduction model relying' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='aligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks [28].\nTo the best of our knowledge, however, the Transformer is the ﬁrst transduction model relying\nentirely on self-attention to compute representations of its input and output without using sequence-\naligned RNNs or convolution. In the following sections, we will describe the Transformer, motivate\nself-attention and discuss its advantages over models such as [14, 15] and [8].\n3 Model Architecture\nMost competitive neural sequence transduction models have an encoder-decoder structure [ 5,2,29].\nHere, the encoder maps an input sequence of symbol representations (x1;:::;x n)to a sequence\nof continuous representations z= (z1;:::;z n). Given z, the decoder then generates an output\nsequence (y1;:::;y m)of symbols one element at a time. At each step the model is auto-regressive\n[9], consuming the previously generated symbols as additional input when generating the next.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='of continuous representations z= (z1;:::;z n). Given z, the decoder then generates an output\nsequence (y1;:::;y m)of symbols one element at a time. At each step the model is auto-regressive\n[9], consuming the previously generated symbols as additional input when generating the next.\nThe Transformer follows this overall architecture using stacked self-attention and point-wise, fully\nconnected layers for both the encoder and decoder, shown in the left and right halves of Figure 1,\nrespectively.\n3.1 Encoder and Decoder Stacks\nEncoder: The encoder is composed of a stack of N= 6 identical layers. Each layer has two\nsub-layers. The ﬁrst is a multi-head self-attention mechanism, and the second is a simple, position-\n2' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 1}
page_content='Figure 1: The Transformer - model architecture.\nwise fully connected feed-forward network. We employ a residual connection [ 10] around each of\nthe two sub-layers, followed by layer normalization [ 1]. That is, the output of each sub-layer is\nLayerNorm( x+ Sublayer( x)), where Sublayer(x)is the function implemented by the sub-layer\nitself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding\nlayers, produce outputs of dimension dmodel = 512 .\nDecoder: The decoder is also composed of a stack of N= 6identical layers. In addition to the two\nsub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head\nattention over the output of the encoder stack. Similar to the encoder, we employ residual connections\naround each of the sub-layers, followed by layer normalization. We also modify the self-attention\nsub-layer in the decoder stack to prevent positions from attending to subsequent positions. This' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 2}
page_content='attention over the output of the encoder stack. Similar to the encoder, we employ residual connections\naround each of the sub-layers, followed by layer normalization. We also modify the self-attention\nsub-layer in the decoder stack to prevent positions from attending to subsequent positions. This\nmasking, combined with fact that the output embeddings are offset by one position, ensures that the\npredictions for position ican depend only on the known outputs at positions less than i.\n3.2 Attention\nAn attention function can be described as mapping a query and a set of key-value pairs to an output,\nwhere the query, keys, values, and output are all vectors. The output is computed as a weighted sum\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention "Scaled Dot-Product Attention" (Figure 2). The input consists of' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 2}
page_content='of the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention "Scaled Dot-Product Attention" (Figure 2). The input consists of\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\n3' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 2}
page_content='Scaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nquery with all keys, divide each bypdk, and apply a softmax function to obtain the weights on the\nvalues.\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\nthe matrix of outputs as:\nAttention(Q;K;V ) = softmax(QKT\npdk)V (1)\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\nof1pdk. Additive attention computes the compatibility function using a feed-forward network with\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 3}
page_content='of1pdk. Additive attention computes the compatibility function using a feed-forward network with\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\nmuch faster and more space-efﬁcient in practice, since it can be implemented using highly optimized\nmatrix multiplication code.\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\nextremely small gradients4. To counteract this effect, we scale the dot products by1pdk.\n3.2.2 Multi-Head Attention\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\nwe found it beneﬁcial to linearly project the queries, keys and values htimes with different, learned' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 3}
page_content='3.2.2 Multi-Head Attention\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\nwe found it beneﬁcial to linearly project the queries, keys and values htimes with different, learned\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\noutput values. These are concatenated and once again projected, resulting in the ﬁnal values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\nvariables with mean 0and variance 1. Then their dot product, q\x01k=Pdk\ni=1qiki, has mean 0and variance dk.\n4' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 3}
page_content='MultiHead( Q;K;V ) = Concat(head 1;:::;head h)WO\nwhere head i= Attention( QWQ\ni;KWK\ni;VWV\ni)\nWhere the projections are parameter matrices WQ\ni2Rdmodel\x02dk,WK\ni2Rdmodel\x02dk,WV\ni2Rdmodel\x02dv\nandWO2Rhdv\x02dmodel.\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\ndk=dv=dmodel=h= 64 . Due to the reduced dimension of each head, the total computational cost\nis similar to that of single-head attention with full dimensionality.\n3.2.3 Applications of Attention in our Model\nThe Transformer uses multi-head attention in three different ways:\n\x0fIn "encoder-decoder attention" layers, the queries come from the previous decoder layer,\nand the memory keys and values come from the output of the encoder. This allows every\nposition in the decoder to attend over all positions in the input sequence. This mimics the\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\n[31, 2, 8].' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 4}
page_content='and the memory keys and values come from the output of the encoder. This allows every\nposition in the decoder to attend over all positions in the input sequence. This mimics the\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\n[31, 2, 8].\n\x0fThe encoder contains self-attention layers. In a self-attention layer all of the keys, values\nand queries come from the same place, in this case, the output of the previous layer in the\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\nencoder.\n\x0fSimilarly, self-attention layers in the decoder allow each position in the decoder to attend to\nall positions in the decoder up to and including that position. We need to prevent leftward\ninformation ﬂow in the decoder to preserve the auto-regressive property. We implement this\ninside of scaled dot-product attention by masking out (setting to \x001) all values in the input' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 4}
page_content='all positions in the decoder up to and including that position. We need to prevent leftward\ninformation ﬂow in the decoder to preserve the auto-regressive property. We implement this\ninside of scaled dot-product attention by masking out (setting to \x001) all values in the input\nof the softmax which correspond to illegal connections. See Figure 2.\n3.3 Position-wise Feed-Forward Networks\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\nconnected feed-forward network, which is applied to each position separately and identically. This\nconsists of two linear transformations with a ReLU activation in between.\nFFN(x) = max(0;xW 1+b1)W2+b2 (2)\nWhile the linear transformations are the same across different positions, they use different parameters\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\ndff= 2048 .' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 4}
page_content='from layer to layer. Another way of describing this is as two convolutions with kernel size 1.\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\ndff= 2048 .\n3.4 Embeddings and Softmax\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\nlinear transformation, similar to [ 24]. In the embedding layers, we multiply those weights bypdmodel.\n3.5 Positional Encoding\nSince our model contains no recurrence and no convolution, in order for the model to make use of the\norder of the sequence, we must inject some information about the relative or absolute position of the' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 4}
page_content='3.5 Positional Encoding\nSince our model contains no recurrence and no convolution, in order for the model to make use of the\norder of the sequence, we must inject some information about the relative or absolute position of the\ntokens in the sequence. To this end, we add "positional encodings" to the input embeddings at the\n5' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 4}
page_content='Table 1: Maximum path lengths, per-layer complexity and minimum number of sequential operations\nfor different layer types. nis the sequence length, dis the representation dimension, kis the kernel\nsize of convolutions and rthe size of the neighborhood in restricted self-attention.\nLayer Type Complexity per Layer Sequential Maximum Path Length\nOperations\nSelf-Attention O(n2\x01d) O(1) O(1)\nRecurrent O(n\x01d2) O(n) O(n)\nConvolutional O(k\x01n\x01d2)O(1) O(logk(n))\nSelf-Attention (restricted) O(r\x01n\x01d)O(1) O(n=r)\nbottoms of the encoder and decoder stacks. The positional encodings have the same dimension dmodel\nas the embeddings, so that the two can be summed. There are many choices of positional encodings,\nlearned and ﬁxed [8].\nIn this work, we use sine and cosine functions of different frequencies:\nPE(pos;2i)=sin(pos=100002i=d model)\nPE(pos;2i+1)=cos(pos=100002i=d model)\nwhereposis the position and iis the dimension. That is, each dimension of the positional encoding' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 5}
page_content='learned and ﬁxed [8].\nIn this work, we use sine and cosine functions of different frequencies:\nPE(pos;2i)=sin(pos=100002i=d model)\nPE(pos;2i+1)=cos(pos=100002i=d model)\nwhereposis the position and iis the dimension. That is, each dimension of the positional encoding\ncorresponds to a sinusoid. The wavelengths form a geometric progression from 2\x19to10000\x012\x19. We\nchose this function because we hypothesized it would allow the model to easily learn to attend by\nrelative positions, since for any ﬁxed offset k,PEpos+kcan be represented as a linear function of\nPEpos.\nWe also experimented with using learned positional embeddings [ 8] instead, and found that the two\nversions produced nearly identical results (see Table 3 row (E)). We chose the sinusoidal version\nbecause it may allow the model to extrapolate to sequence lengths longer than the ones encountered\nduring training.\n4 Why Self-Attention\nIn this section we compare various aspects of self-attention layers to the recurrent and convolu-' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 5}
page_content='because it may allow the model to extrapolate to sequence lengths longer than the ones encountered\nduring training.\n4 Why Self-Attention\nIn this section we compare various aspects of self-attention layers to the recurrent and convolu-\ntional layers commonly used for mapping one variable-length sequence of symbol representations\n(x1;:::;x n)to another sequence of equal length (z1;:::;z n), withxi;zi2Rd, such as a hidden\nlayer in a typical sequence transduction encoder or decoder. Motivating our use of self-attention we\nconsider three desiderata.\nOne is the total computational complexity per layer. Another is the amount of computation that can\nbe parallelized, as measured by the minimum number of sequential operations required.\nThe third is the path length between long-range dependencies in the network. Learning long-range\ndependencies is a key challenge in many sequence transduction tasks. One key factor affecting the' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 5}
page_content='be parallelized, as measured by the minimum number of sequential operations required.\nThe third is the path length between long-range dependencies in the network. Learning long-range\ndependencies is a key challenge in many sequence transduction tasks. One key factor affecting the\nability to learn such dependencies is the length of the paths forward and backward signals have to\ntraverse in the network. The shorter these paths between any combination of positions in the input\nand output sequences, the easier it is to learn long-range dependencies [ 11]. Hence we also compare\nthe maximum path length between any two input and output positions in networks composed of the\ndifferent layer types.\nAs noted in Table 1, a self-attention layer connects all positions with a constant number of sequentially\nexecuted operations, whereas a recurrent layer requires O(n)sequential operations. In terms of\ncomputational complexity, self-attention layers are faster than recurrent layers when the sequence' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 5}
page_content='As noted in Table 1, a self-attention layer connects all positions with a constant number of sequentially\nexecuted operations, whereas a recurrent layer requires O(n)sequential operations. In terms of\ncomputational complexity, self-attention layers are faster than recurrent layers when the sequence\nlengthnis smaller than the representation dimensionality d, which is most often the case with\nsentence representations used by state-of-the-art models in machine translations, such as word-piece\n[31] and byte-pair [ 25] representations. To improve computational performance for tasks involving\nvery long sequences, self-attention could be restricted to considering only a neighborhood of size rin\n6' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 5}
page_content='the input sequence centered around the respective output position. This would increase the maximum\npath length to O(n=r). We plan to investigate this approach further in future work.\nA single convolutional layer with kernel width k<n does not connect all pairs of input and output\npositions. Doing so requires a stack of O(n=k)convolutional layers in the case of contiguous kernels,\norO(logk(n))in the case of dilated convolutions [ 15], increasing the length of the longest paths\nbetween any two positions in the network. Convolutional layers are generally more expensive than\nrecurrent layers, by a factor of k. Separable convolutions [ 6], however, decrease the complexity\nconsiderably, to O(k\x01n\x01d+n\x01d2). Even with k=n, however, the complexity of a separable\nconvolution is equal to the combination of a self-attention layer and a point-wise feed-forward layer,\nthe approach we take in our model.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 6}
page_content='considerably, to O(k\x01n\x01d+n\x01d2). Even with k=n, however, the complexity of a separable\nconvolution is equal to the combination of a self-attention layer and a point-wise feed-forward layer,\nthe approach we take in our model.\nAs side beneﬁt, self-attention could yield more interpretable models. We inspect attention distributions\nfrom our models and present and discuss examples in the appendix. Not only do individual attention\nheads clearly learn to perform different tasks, many appear to exhibit behavior related to the syntactic\nand semantic structure of the sentences.\n5 Training\nThis section describes the training regime for our models.\n5.1 Training Data and Batching\nWe trained on the standard WMT 2014 English-German dataset consisting of about 4.5 million\nsentence pairs. Sentences were encoded using byte-pair encoding [ 3], which has a shared source-\ntarget vocabulary of about 37000 tokens. For English-French, we used the signiﬁcantly larger WMT' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 6}
page_content='We trained on the standard WMT 2014 English-German dataset consisting of about 4.5 million\nsentence pairs. Sentences were encoded using byte-pair encoding [ 3], which has a shared source-\ntarget vocabulary of about 37000 tokens. For English-French, we used the signiﬁcantly larger WMT\n2014 English-French dataset consisting of 36M sentences and split tokens into a 32000 word-piece\nvocabulary [ 31]. Sentence pairs were batched together by approximate sequence length. Each training\nbatch contained a set of sentence pairs containing approximately 25000 source tokens and 25000\ntarget tokens.\n5.2 Hardware and Schedule\nWe trained our models on one machine with 8 NVIDIA P100 GPUs. For our base models using\nthe hyperparameters described throughout the paper, each training step took about 0.4 seconds. We\ntrained the base models for a total of 100,000 steps or 12 hours. For our big models,(described on the' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 6}
page_content='We trained our models on one machine with 8 NVIDIA P100 GPUs. For our base models using\nthe hyperparameters described throughout the paper, each training step took about 0.4 seconds. We\ntrained the base models for a total of 100,000 steps or 12 hours. For our big models,(described on the\nbottom line of table 3), step time was 1.0 seconds. The big models were trained for 300,000 steps\n(3.5 days).\n5.3 Optimizer\nWe used the Adam optimizer [ 17] with\x0c1= 0:9,\x0c2= 0:98and\x0f= 10\x009. We varied the learning\nrate over the course of training, according to the formula:\nlrate =d\x000:5\nmodel\x01min(step_num\x000:5;step _num\x01warmup _steps\x001:5) (3)\nThis corresponds to increasing the learning rate linearly for the ﬁrst warmup _steps training steps,\nand decreasing it thereafter proportionally to the inverse square root of the step number. We used\nwarmup _steps = 4000 .\n5.4 Regularization\nWe employ three types of regularization during training:' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 6}
page_content='This corresponds to increasing the learning rate linearly for the ﬁrst warmup _steps training steps,\nand decreasing it thereafter proportionally to the inverse square root of the step number. We used\nwarmup _steps = 4000 .\n5.4 Regularization\nWe employ three types of regularization during training:\nResidual Dropout We apply dropout [ 27] to the output of each sub-layer, before it is added to the\nsub-layer input and normalized. In addition, we apply dropout to the sums of the embeddings and the\npositional encodings in both the encoder and decoder stacks. For the base model, we use a rate of\nPdrop= 0:1.\n7' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 6}
page_content='Table 2: The Transformer achieves better BLEU scores than previous state-of-the-art models on the\nEnglish-to-German and English-to-French newstest2014 tests at a fraction of the training cost.\nModelBLEU Training Cost (FLOPs)\nEN-DE EN-FR EN-DE EN-FR\nByteNet [15] 23.75\nDeep-Att + PosUnk [32] 39.2 1:0\x011020\nGNMT + RL [31] 24.6 39.92 2:3\x0110191:4\x011020\nConvS2S [8] 25.16 40.46 9:6\x0110181:5\x011020\nMoE [26] 26.03 40.56 2:0\x0110191:2\x011020\nDeep-Att + PosUnk Ensemble [32] 40.4 8:0\x011020\nGNMT + RL Ensemble [31] 26.30 41.16 1:8\x0110201:1\x011021\nConvS2S Ensemble [8] 26.36 41.29 7:7\x0110191:2\x011021\nTransformer (base model) 27.3 38.1 3:3\x011018\nTransformer (big) 28.4 41.0 2:3\x011019\nLabel Smoothing During training, we employed label smoothing of value \x0fls= 0:1[30]. This\nhurts perplexity, as the model learns to be more unsure, but improves accuracy and BLEU score.\n6 Results\n6.1 Machine Translation\nOn the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big)' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 7}
page_content='hurts perplexity, as the model learns to be more unsure, but improves accuracy and BLEU score.\n6 Results\n6.1 Machine Translation\nOn the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big)\nin Table 2) outperforms the best previously reported models (including ensembles) by more than 2:0\nBLEU, establishing a new state-of-the-art BLEU score of 28:4. The conﬁguration of this model is\nlisted in the bottom line of Table 3. Training took 3:5days on 8P100 GPUs. Even our base model\nsurpasses all previously published models and ensembles, at a fraction of the training cost of any of\nthe competitive models.\nOn the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41:0,\noutperforming all of the previously published single models, at less than 1=4the training cost of the\nprevious state-of-the-art model. The Transformer (big) model trained for English-to-French used\ndropout rate Pdrop= 0:1, instead of 0:3.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 7}
page_content='outperforming all of the previously published single models, at less than 1=4the training cost of the\nprevious state-of-the-art model. The Transformer (big) model trained for English-to-French used\ndropout rate Pdrop= 0:1, instead of 0:3.\nFor the base models, we used a single model obtained by averaging the last 5 checkpoints, which\nwere written at 10-minute intervals. For the big models, we averaged the last 20 checkpoints. We\nused beam search with a beam size of 4and length penalty \x0b= 0:6[31]. These hyperparameters\nwere chosen after experimentation on the development set. We set the maximum output length during\ninference to input length + 50, but terminate early when possible [31].\nTable 2 summarizes our results and compares our translation quality and training costs to other model\narchitectures from the literature. We estimate the number of ﬂoating point operations used to train a\nmodel by multiplying the training time, the number of GPUs used, and an estimate of the sustained' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 7}
page_content='architectures from the literature. We estimate the number of ﬂoating point operations used to train a\nmodel by multiplying the training time, the number of GPUs used, and an estimate of the sustained\nsingle-precision ﬂoating-point capacity of each GPU5.\n6.2 Model Variations\nTo evaluate the importance of different components of the Transformer, we varied our base model\nin different ways, measuring the change in performance on English-to-German translation on the\ndevelopment set, newstest2013. We used beam search as described in the previous section, but no\ncheckpoint averaging. We present these results in Table 3.\nIn Table 3 rows (A), we vary the number of attention heads and the attention key and value dimensions,\nkeeping the amount of computation constant, as described in Section 3.2.2. While single-head\nattention is 0.9 BLEU worse than the best setting, quality also drops off with too many heads.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 7}
page_content='In Table 3 rows (A), we vary the number of attention heads and the attention key and value dimensions,\nkeeping the amount of computation constant, as described in Section 3.2.2. While single-head\nattention is 0.9 BLEU worse than the best setting, quality also drops off with too many heads.\n5We used values of 2.8, 3.7, 6.0 and 9.5 TFLOPS for K80, K40, M40 and P100, respectively.\n8' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 7}
page_content='Table 3: Variations on the Transformer architecture. Unlisted values are identical to those of the base\nmodel. All metrics are on the English-to-German translation development set, newstest2013. Listed\nperplexities are per-wordpiece, according to our byte-pair encoding, and should not be compared to\nper-word perplexities.\nN d modeldffh d kdvPdrop\x0flstrain PPL BLEU params\nsteps (dev) (dev)\x02106\nbase 6 512 2048 8 64 64 0.1 0.1 100K 4.92 25.8 65\n(A)1 512 512 5.29 24.9\n4 128 128 5.00 25.5\n16 32 32 4.91 25.8\n32 16 16 5.01 25.4\n(B)16 5.16 25.1 58\n32 5.01 25.4 60\n(C)2 6.11 23.7 36\n4 5.19 25.3 50\n8 4.88 25.5 80\n256 32 32 5.75 24.5 28\n1024 128 128 4.66 26.0 168\n1024 5.12 25.4 53\n4096 4.75 26.2 90\n(D)0.0 5.77 24.6\n0.2 4.95 25.5\n0.0 4.67 25.3\n0.2 5.47 25.7\n(E) positional embedding instead of sinusoids 4.92 25.7\nbig 6 1024 4096 16 0.3 300K 4.33 26.4 213\nIn Table 3 rows (B), we observe that reducing the attention key size dkhurts model quality. This' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 8}
page_content='1024 5.12 25.4 53\n4096 4.75 26.2 90\n(D)0.0 5.77 24.6\n0.2 4.95 25.5\n0.0 4.67 25.3\n0.2 5.47 25.7\n(E) positional embedding instead of sinusoids 4.92 25.7\nbig 6 1024 4096 16 0.3 300K 4.33 26.4 213\nIn Table 3 rows (B), we observe that reducing the attention key size dkhurts model quality. This\nsuggests that determining compatibility is not easy and that a more sophisticated compatibility\nfunction than dot product may be beneﬁcial. We further observe in rows (C) and (D) that, as expected,\nbigger models are better, and dropout is very helpful in avoiding over-ﬁtting. In row (E) we replace our\nsinusoidal positional encoding with learned positional embeddings [ 8], and observe nearly identical\nresults to the base model.\n7 Conclusion\nIn this work, we presented the Transformer, the ﬁrst sequence transduction model based entirely on\nattention, replacing the recurrent layers most commonly used in encoder-decoder architectures with\nmulti-headed self-attention.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 8}
page_content='results to the base model.\n7 Conclusion\nIn this work, we presented the Transformer, the ﬁrst sequence transduction model based entirely on\nattention, replacing the recurrent layers most commonly used in encoder-decoder architectures with\nmulti-headed self-attention.\nFor translation tasks, the Transformer can be trained signiﬁcantly faster than architectures based\non recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014\nEnglish-to-French translation tasks, we achieve a new state of the art. In the former task our best\nmodel outperforms even all previously reported ensembles.\nWe are excited about the future of attention-based models and plan to apply them to other tasks. We\nplan to extend the Transformer to problems involving input and output modalities other than text and\nto investigate local, restricted attention mechanisms to efﬁciently handle large inputs and outputs' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 8}
page_content='plan to extend the Transformer to problems involving input and output modalities other than text and\nto investigate local, restricted attention mechanisms to efﬁciently handle large inputs and outputs\nsuch as images, audio and video. Making generation less sequential is another research goals of ours.\nThe code we used to train and evaluate our models is available at https://github.com/\ntensorflow/tensor2tensor .\nAcknowledgements We are grateful to Nal Kalchbrenner and Stephan Gouws for their fruitful\ncomments, corrections and inspiration.\n9' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 8}
page_content='References\n[1]Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint\narXiv:1607.06450 , 2016.\n[2]Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly\nlearning to align and translate. CoRR , abs/1409.0473, 2014.\n[3]Denny Britz, Anna Goldie, Minh-Thang Luong, and Quoc V . Le. Massive exploration of neural\nmachine translation architectures. CoRR , abs/1703.03906, 2017.\n[4]Jianpeng Cheng, Li Dong, and Mirella Lapata. Long short-term memory-networks for machine\nreading. arXiv preprint arXiv:1601.06733 , 2016.\n[5]Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Fethi Bougares, Holger Schwenk,\nand Yoshua Bengio. Learning phrase representations using rnn encoder-decoder for statistical\nmachine translation. CoRR , abs/1406.1078, 2014.\n[6]Francois Chollet. Xception: Deep learning with depthwise separable convolutions. arXiv\npreprint arXiv:1610.02357 , 2016.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 9}
page_content='and Yoshua Bengio. Learning phrase representations using rnn encoder-decoder for statistical\nmachine translation. CoRR , abs/1406.1078, 2014.\n[6]Francois Chollet. Xception: Deep learning with depthwise separable convolutions. arXiv\npreprint arXiv:1610.02357 , 2016.\n[7]Junyoung Chung, Çaglar Gülçehre, Kyunghyun Cho, and Yoshua Bengio. Empirical evaluation\nof gated recurrent neural networks on sequence modeling. CoRR , abs/1412.3555, 2014.\n[8]Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, and Yann N. Dauphin. Convolu-\ntional sequence to sequence learning. arXiv preprint arXiv:1705.03122v2 , 2017.\n[9]Alex Graves. Generating sequences with recurrent neural networks. arXiv preprint\narXiv:1308.0850 , 2013.\n[10] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for im-\nage recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern\nRecognition , pages 770–778, 2016.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 9}
page_content='arXiv:1308.0850 , 2013.\n[10] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for im-\nage recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern\nRecognition , pages 770–778, 2016.\n[11] Sepp Hochreiter, Yoshua Bengio, Paolo Frasconi, and Jürgen Schmidhuber. Gradient ﬂow in\nrecurrent nets: the difﬁculty of learning long-term dependencies, 2001.\n[12] Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural computation ,\n9(8):1735–1780, 1997.\n[13] Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring\nthe limits of language modeling. arXiv preprint arXiv:1602.02410 , 2016.\n[14] Łukasz Kaiser and Ilya Sutskever. Neural GPUs learn algorithms. In International Conference\non Learning Representations (ICLR) , 2016.\n[15] Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan, Aaron van den Oord, Alex Graves, and Ko-' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 9}
page_content='[14] Łukasz Kaiser and Ilya Sutskever. Neural GPUs learn algorithms. In International Conference\non Learning Representations (ICLR) , 2016.\n[15] Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan, Aaron van den Oord, Alex Graves, and Ko-\nray Kavukcuoglu. Neural machine translation in linear time. arXiv preprint arXiv:1610.10099v2 ,\n2017.\n[16] Yoon Kim, Carl Denton, Luong Hoang, and Alexander M. Rush. Structured attention networks.\nInInternational Conference on Learning Representations , 2017.\n[17] Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR , 2015.\n[18] Oleksii Kuchaiev and Boris Ginsburg. Factorization tricks for LSTM networks. arXiv preprint\narXiv:1703.10722 , 2017.\n[19] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos, Mo Yu, Bing Xiang, Bowen\nZhou, and Yoshua Bengio. A structured self-attentive sentence embedding. arXiv preprint\narXiv:1703.03130 , 2017.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 9}
page_content='arXiv:1703.10722 , 2017.\n[19] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos, Mo Yu, Bing Xiang, Bowen\nZhou, and Yoshua Bengio. A structured self-attentive sentence embedding. arXiv preprint\narXiv:1703.03130 , 2017.\n[20] Samy Bengio Łukasz Kaiser. Can active memory replace attention? In Advances in Neural\nInformation Processing Systems, (NIPS) , 2016.\n10' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 9}
page_content='[21] Minh-Thang Luong, Hieu Pham, and Christopher D Manning. Effective approaches to attention-\nbased neural machine translation. arXiv preprint arXiv:1508.04025 , 2015.\n[22] Ankur Parikh, Oscar Täckström, Dipanjan Das, and Jakob Uszkoreit. A decomposable attention\nmodel. In Empirical Methods in Natural Language Processing , 2016.\n[23] Romain Paulus, Caiming Xiong, and Richard Socher. A deep reinforced model for abstractive\nsummarization. arXiv preprint arXiv:1705.04304 , 2017.\n[24] Oﬁr Press and Lior Wolf. Using the output embedding to improve language models. arXiv\npreprint arXiv:1608.05859 , 2016.\n[25] Rico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words\nwith subword units. arXiv preprint arXiv:1508.07909 , 2015.\n[26] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton,\nand Jeff Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts\nlayer. arXiv preprint arXiv:1701.06538 , 2017.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 10}
page_content='with subword units. arXiv preprint arXiv:1508.07909 , 2015.\n[26] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton,\nand Jeff Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts\nlayer. arXiv preprint arXiv:1701.06538 , 2017.\n[27] Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdi-\nnov. Dropout: a simple way to prevent neural networks from overﬁtting. Journal of Machine\nLearning Research , 15(1):1929–1958, 2014.\n[28] Sainbayar Sukhbaatar, arthur szlam, Jason Weston, and Rob Fergus. End-to-end memory\nnetworks. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors,\nAdvances in Neural Information Processing Systems 28 , pages 2440–2448. Curran Associates,\nInc., 2015.\n[29] Ilya Sutskever, Oriol Vinyals, and Quoc VV Le. Sequence to sequence learning with neural\nnetworks. In Advances in Neural Information Processing Systems , pages 3104–3112, 2014.' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 10}
page_content='Advances in Neural Information Processing Systems 28 , pages 2440–2448. Curran Associates,\nInc., 2015.\n[29] Ilya Sutskever, Oriol Vinyals, and Quoc VV Le. Sequence to sequence learning with neural\nnetworks. In Advances in Neural Information Processing Systems , pages 3104–3112, 2014.\n[30] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna.\nRethinking the inception architecture for computer vision. CoRR , abs/1512.00567, 2015.\n[31] Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Norouzi, Wolfgang\nMacherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, et al. Google’s neural machine\ntranslation system: Bridging the gap between human and machine translation. arXiv preprint\narXiv:1609.08144 , 2016.\n[32] Jie Zhou, Ying Cao, Xuguang Wang, Peng Li, and Wei Xu. Deep recurrent models with\nfast-forward connections for neural machine translation. CoRR , abs/1606.04199, 2016.\n11' metadata={'source': 'private_upload/2023-08-09-17/NIPS-2017-attention-is-all-you-need-Paper.pdf', 'page': 10}
filepath=private_upload/2023-08-09-17/LLaMa.pdf,len=128
page_content='LLaMA: Open and Efﬁcient Foundation Language Models\nHugo Touvron\x03, Thibaut Lavril\x03, Gautier Izacard\x03, Xavier Martinet\nMarie-Anne Lachaux, Timothee Lacroix, Baptiste Rozière, Naman Goyal\nEric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin\nEdouard Grave\x03, Guillaume Lample\x03\nMeta AI\nAbstract\nWe introduce LLaMA, a collection of founda-\ntion language models ranging from 7B to 65B\nparameters. We train our models on trillions\nof tokens, and show that it is possible to train\nstate-of-the-art models using publicly avail-\nable datasets exclusively, without resorting\nto proprietary and inaccessible datasets. In\nparticular, LLaMA-13B outperforms GPT-3\n(175B) on most benchmarks, and LLaMA-\n65B is competitive with the best models,\nChinchilla-70B and PaLM-540B. We release\nall our models to the research community1.\n1 Introduction\nLarge Languages Models (LLMs) trained on mas-\nsive corpora of texts have shown their ability to per-\nform new tasks from textual instructions or from a' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='65B is competitive with the best models,\nChinchilla-70B and PaLM-540B. We release\nall our models to the research community1.\n1 Introduction\nLarge Languages Models (LLMs) trained on mas-\nsive corpora of texts have shown their ability to per-\nform new tasks from textual instructions or from a\nfew examples (Brown et al., 2020). These few-shot\nproperties ﬁrst appeared when scaling models to a\nsufﬁcient size (Kaplan et al., 2020), resulting in a\nline of work that focuses on further scaling these\nmodels (Chowdhery et al., 2022; Rae et al., 2021).\nThese efforts are based on the assumption that\nmore parameters will lead to better performance.\nHowever, recent work from Hoffmann et al. (2022)\nshows that, for a given compute budget, the best\nperformances are not achieved by the largest mod-\nels, but by smaller models trained on more data.\nThe objective of the scaling laws from Hoff-\nmann et al. (2022) is to determine how to best\nscale the dataset and model sizes for a particular' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='shows that, for a given compute budget, the best\nperformances are not achieved by the largest mod-\nels, but by smaller models trained on more data.\nThe objective of the scaling laws from Hoff-\nmann et al. (2022) is to determine how to best\nscale the dataset and model sizes for a particular\ntraining compute budget. However, this objective\ndisregards the inference budget, which becomes\ncritical when serving a language model at scale.\nIn this context, given a target level of performance,\nthe preferred model is not the fastest to train but the\nfastest at inference, and although it may be cheaper\nto train a large model to reach a certain level of\n\x03Equal contribution. Correspondence: {htouvron,\nthibautlav,gizacard,egrave,glample}@meta.com\n1https://github.com/facebookresearch/llamaperformance, a smaller one trained longer will\nultimately be cheaper at inference. For instance,\nalthough Hoffmann et al. (2022) recommends\ntraining a 10B model on 200B tokens, we ﬁnd' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='thibautlav,gizacard,egrave,glample}@meta.com\n1https://github.com/facebookresearch/llamaperformance, a smaller one trained longer will\nultimately be cheaper at inference. For instance,\nalthough Hoffmann et al. (2022) recommends\ntraining a 10B model on 200B tokens, we ﬁnd\nthat the performance of a 7B model continues to\nimprove even after 1T tokens.\nThe focus of this work is to train a series of\nlanguage models that achieve the best possible per-\nformance at various inference budgets, by training\non more tokens than what is typically used. The\nresulting models, called LLaMA , ranges from 7B\nto 65B parameters with competitive performance\ncompared to the best existing LLMs. For instance,\nLLaMA-13B outperforms GPT-3 on most bench-\nmarks, despite being 10 \x02smaller. We believe that\nthis model will help democratize the access and\nstudy of LLMs, since it can be run on a single GPU.\nAt the higher-end of the scale, our 65B-parameter\nmodel is also competitive with the best large lan-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='LLaMA-13B outperforms GPT-3 on most bench-\nmarks, despite being 10 \x02smaller. We believe that\nthis model will help democratize the access and\nstudy of LLMs, since it can be run on a single GPU.\nAt the higher-end of the scale, our 65B-parameter\nmodel is also competitive with the best large lan-\nguage models such as Chinchilla or PaLM-540B.\nUnlike Chinchilla, PaLM, or GPT-3, we only\nuse publicly available data, making our work com-\npatible with open-sourcing, while most existing\nmodels rely on data which is either not publicly\navailable or undocumented (e.g. “Books – 2TB” or\n“Social media conversations”). There exist some\nexceptions, notably OPT (Zhang et al., 2022),\nGPT-NeoX (Black et al., 2022), BLOOM (Scao\net al., 2022) and GLM (Zeng et al., 2022), but none\nthat are competitive with PaLM-62B or Chinchilla.\nIn the rest of this paper, we present an overview\nof the modiﬁcations we made to the transformer\narchitecture (Vaswani et al., 2017), as well as our' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='GPT-NeoX (Black et al., 2022), BLOOM (Scao\net al., 2022) and GLM (Zeng et al., 2022), but none\nthat are competitive with PaLM-62B or Chinchilla.\nIn the rest of this paper, we present an overview\nof the modiﬁcations we made to the transformer\narchitecture (Vaswani et al., 2017), as well as our\ntraining method. We then report the performance of\nour models and compare with others LLMs on a set\nof standard benchmarks. Finally, we expose some\nof the biases and toxicity encoded in our models,\nusing some of the most recent benchmarks from\nthe responsible AI community.arXiv:2302.13971v1  [cs.CL]  27 Feb 2023' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 0}
page_content='2 Approach\nOur training approach is similar to the methods\ndescribed in previous work (Brown et al., 2020;\nChowdhery et al., 2022), and is inspired by the\nChinchilla scaling laws (Hoffmann et al., 2022).\nWe train large transformers on a large quantity of\ntextual data using a standard optimizer.\n2.1 Pre-training Data\nOur training dataset is a mixture of several sources,\nreported in Table 1, that cover a diverse set of do-\nmains. For the most part, we reuse data sources\nthat have been leveraged to train other LLMs, with\nthe restriction of only using data that is publicly\navailable, and compatible with open sourcing. This\nleads to the following mixture of data and the per-\ncentage they represent in the training set:\nEnglish CommonCrawl [67%]. We preprocess\nﬁve CommonCrawl dumps, ranging from 2017\nto 2020, with the CCNet pipeline (Wenzek et al.,\n2020). This process deduplicates the data at the\nline level, performs language identiﬁcation with' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='centage they represent in the training set:\nEnglish CommonCrawl [67%]. We preprocess\nﬁve CommonCrawl dumps, ranging from 2017\nto 2020, with the CCNet pipeline (Wenzek et al.,\n2020). This process deduplicates the data at the\nline level, performs language identiﬁcation with\na fastText linear classiﬁer to remove non-English\npages and ﬁlters low quality content with an n-\ngram language model. In addition, we trained a\nlinear model to classify pages used as references\nin Wikipedia v.s.randomly sampled pages, and\ndiscarded pages not classiﬁed as references.\nC4 [15%]. During exploratory experiments, we\nobserved that using diverse pre-processed Com-\nmonCrawl datasets improves performance. We thus\nincluded the publicly available C4 dataset (Raffel\net al., 2020) in our data. The preprocessing of C4\nalso contains deduplication and language identiﬁ-\ncation steps: the main difference with CCNet is\nthe quality ﬁltering, which mostly relies on heuris-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='included the publicly available C4 dataset (Raffel\net al., 2020) in our data. The preprocessing of C4\nalso contains deduplication and language identiﬁ-\ncation steps: the main difference with CCNet is\nthe quality ﬁltering, which mostly relies on heuris-\ntics such as presence of punctuation marks or the\nnumber of words and sentences in a webpage.\nGithub [4.5%]. We use the public GitHub\ndataset available on Google BigQuery. We only\nkept projects that are distributed under the Apache,\nBSD and MIT licenses. Additionally, we ﬁltered\nlow quality ﬁles with heuristics based on the line\nlength or proportion of alphanumeric characters,\nand removed boilerplate, such as headers, with reg-\nular expressions. Finally, we deduplicate the result-\ning dataset at the ﬁle level, with exact matches.\nWikipedia [4.5%]. We add Wikipedia dumps\nfrom the June-August 2022 period, covering 20Dataset Sampling prop. Epochs Disk size\nCommonCrawl 67.0% 1.10 3.3 TB\nC4 15.0% 1.06 783 GB\nGithub 4.5% 0.64 328 GB' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='ing dataset at the ﬁle level, with exact matches.\nWikipedia [4.5%]. We add Wikipedia dumps\nfrom the June-August 2022 period, covering 20Dataset Sampling prop. Epochs Disk size\nCommonCrawl 67.0% 1.10 3.3 TB\nC4 15.0% 1.06 783 GB\nGithub 4.5% 0.64 328 GB\nWikipedia 4.5% 2.45 83 GB\nBooks 4.5% 2.23 85 GB\nArXiv 2.5% 1.06 92 GB\nStackExchange 2.0% 1.03 78 GB\nTable 1: Pre-training data. Data mixtures used for pre-\ntraining, for each subset we list the sampling propor-\ntion, number of epochs performed on the subset when\ntraining on 1.4T tokens, and disk size. The pre-training\nruns on 1T tokens have the same sampling proportion.\nlanguages, which use either the Latin or Cyrillic\nscripts: bg,ca,cs,da,de,en,es,fr,hr,hu,it,\nnl,pl,pt,ro,ru,sl,sr,sv,uk. We process the\ndata to remove hyperlinks, comments and other\nformatting boilerplate.\nGutenberg and Books3 [4.5%]. We include\ntwo book corpora in our training dataset: the Guten-\nberg Project, which contains books that are in the' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='scripts: bg,ca,cs,da,de,en,es,fr,hr,hu,it,\nnl,pl,pt,ro,ru,sl,sr,sv,uk. We process the\ndata to remove hyperlinks, comments and other\nformatting boilerplate.\nGutenberg and Books3 [4.5%]. We include\ntwo book corpora in our training dataset: the Guten-\nberg Project, which contains books that are in the\npublic domain, and the Books3 section of TheP-\nile (Gao et al., 2020), a publicly available dataset\nfor training large language models. We perform\ndeduplication at the book level, removing books\nwith more than 90% content overlap.\nArXiv [2.5%]. We process arXiv Latex ﬁles\nto add scientiﬁc data to our dataset. Following\nLewkowycz et al. (2022), we removed everything\nbefore the ﬁrst section, as well as the bibliography.\nWe also removed the comments from the .tex ﬁles,\nand inline-expanded deﬁnitions and macros written\nby users to increase consistency across papers.\nStack Exchange [2%]. We include a dump of\nStack Exchange, a website of high quality ques-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='before the ﬁrst section, as well as the bibliography.\nWe also removed the comments from the .tex ﬁles,\nand inline-expanded deﬁnitions and macros written\nby users to increase consistency across papers.\nStack Exchange [2%]. We include a dump of\nStack Exchange, a website of high quality ques-\ntions and answers that covers a diverse set of do-\nmains, ranging from computer science to chemistry.\nWe kept the data from the 28 largest websites, re-\nmoved the HTML tags from text and sorted the\nanswers by score (from highest to lowest).\nTokenizer. We tokenize the data with the byte-\npair encoding (BPE) algorithm (Sennrich et al.,\n2015), using the implementation from Sentence-\nPiece (Kudo and Richardson, 2018). Notably, we\nsplit all numbers into individual digits, and fallback\nto bytes to decompose unknown UTF-8 characters.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 1}
page_content='params dimension nheadsnlayers learning rate batch size ntokens\n6.7B 4096 32 32 3:0e\x0044M 1.0T\n13.0B 5120 40 40 3:0e\x0044M 1.0T\n32.5B 6656 52 60 1:5e\x0044M 1.4T\n65.2B 8192 64 80 1:5e\x0044M 1.4T\nTable 2: Model sizes, architectures, and optimization hyper-parameters.\nOverall, our entire training dataset contains\nroughly 1.4T tokens after tokenization. For most of\nour training data, each token is used only once dur-\ning training, with the exception of the Wikipedia\nand Books domains, over which we perform ap-\nproximately two epochs.\n2.2 Architecture\nFollowing recent work on large language models,\nour network is based on the transformer architec-\nture (Vaswani et al., 2017). We leverage various\nimprovements that were subsequently proposed,\nand used in different models such as PaLM. Here\nare the main difference with the original architec-\nture, and where we were found the inspiration for\nthis change (in bracket):\nPre-normalization [GPT3]. To improve the' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 2}
page_content='improvements that were subsequently proposed,\nand used in different models such as PaLM. Here\nare the main difference with the original architec-\nture, and where we were found the inspiration for\nthis change (in bracket):\nPre-normalization [GPT3]. To improve the\ntraining stability, we normalize the input of each\ntransformer sub-layer, instead of normalizing the\noutput. We use the RMSNorm normalizing func-\ntion, introduced by Zhang and Sennrich (2019).\nSwiGLU activation function [PaLM]. We re-\nplace the ReLU non-linearity by the SwiGLU ac-\ntivation function, introduced by Shazeer (2020) to\nimprove the performance. We use a dimension of\n2\n34dinstead of 4das in PaLM.\nRotary Embeddings [GPTNeo]. We remove the\nabsolute positional embeddings, and instead, add\nrotary positional embeddings (RoPE), introduced\nby Su et al. (2021), at each layer of the network.\nThe details of the hyper-parameters for our dif-\nferent models are given in Table 2.\n2.3 Optimizer' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 2}
page_content='Rotary Embeddings [GPTNeo]. We remove the\nabsolute positional embeddings, and instead, add\nrotary positional embeddings (RoPE), introduced\nby Su et al. (2021), at each layer of the network.\nThe details of the hyper-parameters for our dif-\nferent models are given in Table 2.\n2.3 Optimizer\nOur models are trained using the AdamW opti-\nmizer (Loshchilov and Hutter, 2017), with the fol-\nlowing hyper-parameters: \x0c1= 0:9;\x0c2= 0:95.\nWe use a cosine learning rate schedule, such that\nthe ﬁnal learning rate is equal to 10% of the maxi-\nmal learning rate. We use a weight decay of 0:1and\ngradient clipping of 1:0. We use 2;000warmup\n0 200 400 600 800 1000 1200 1400\nBillion of tokens1.51.61.71.81.92.02.12.2Training lossLLaMA 7B\nLLaMA 13B\nLLaMA 33B\nLLaMA 65BFigure 1: Training loss over train tokens for the 7B,\n13B, 33B, and 65 models. LLaMA-33B and LLaMA-\n65B were trained on 1.4T tokens. The smaller models\nwere trained on 1.0T tokens. All models are trained\nwith a batch size of 4M tokens.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 2}
page_content='LLaMA 13B\nLLaMA 33B\nLLaMA 65BFigure 1: Training loss over train tokens for the 7B,\n13B, 33B, and 65 models. LLaMA-33B and LLaMA-\n65B were trained on 1.4T tokens. The smaller models\nwere trained on 1.0T tokens. All models are trained\nwith a batch size of 4M tokens.\nsteps, and vary the learning rate and batch size with\nthe size of the model (see Table 2 for details).\n2.4 Efﬁcient implementation\nWe make several optimizations to improve the train-\ning speed of our models. First, we use an efﬁcient\nimplementation of the causal multi-head attention\nto reduce memory usage and runtime. This imple-\nmentation, available in the xformers library,2is\ninspired by Rabe and Staats (2021) and uses the\nbackward from Dao et al. (2022). This is achieved\nby not storing the attention weights and not com-\nputing the key/query scores that are masked due to\nthe causal nature of the language modeling task.\nTo further improve training efﬁciency, we re-\nduced the amount of activations that are recom-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 2}
page_content='backward from Dao et al. (2022). This is achieved\nby not storing the attention weights and not com-\nputing the key/query scores that are masked due to\nthe causal nature of the language modeling task.\nTo further improve training efﬁciency, we re-\nduced the amount of activations that are recom-\nputed during the backward pass with checkpoint-\ning. More precisely, we save the activations that\nare expensive to compute, such as the outputs of\nlinear layers. This is achieved by manually imple-\nmenting the backward function for the transformer\nlayers, instead of relying on the PyTorch autograd.\nTo fully beneﬁt from this optimization, we need to\n2https://github.com/facebookresearch/xformers' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 2}
page_content='BoolQ PIQA SIQA HellaSwag WinoGrande ARC-e ARC-c OBQA\nGPT-3 175B 60.5 81.0 - 78.9 70.2 68.8 51.4 57.6\nGopher 280B 79.3 81.8 50.6 79.2 70.1 - - -\nChinchilla 70B 83.7 81.8 51.3 80.8 74.9 - - -\nPaLM 62B 84.8 80.5 - 79.7 77.0 75.2 52.5 50.4\nPaLM-cont 62B 83.9 81.4 - 80.6 77.0 - - -\nPaLM 540B 88.0 82.3 - 83.4 81.1 76.6 53.0 53.4\nLLaMA7B 76.5 79.8 48.9 76.1 70.1 72.8 47.6 57.2\n13B 78.1 80.1 50.4 79.2 73.0 74.8 52.7 56.4\n33B 83.1 82.3 50.4 82.8 76.0 80.0 57.8 58.6\n65B 85.3 82.8 52.3 84.2 77.0 78.9 56.0 60.2\nTable 3: Zero-shot performance on Common Sense Reasoning tasks.\nreduce the memory usage of the model by using\nmodel and sequence parallelism, as described by\nKorthikanti et al. (2022). Moreover, we also over-\nlap the computation of activations and the commu-\nnication between GPUs over the network (due to\nall_reduce operations) as much as possible.\nWhen training a 65B-parameter model, our code\nprocesses around 380 tokens/sec/GPU on 2048\nA100 GPU with 80GB of RAM. This means that' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 3}
page_content='lap the computation of activations and the commu-\nnication between GPUs over the network (due to\nall_reduce operations) as much as possible.\nWhen training a 65B-parameter model, our code\nprocesses around 380 tokens/sec/GPU on 2048\nA100 GPU with 80GB of RAM. This means that\ntraining over our dataset containing 1.4T tokens\ntakes approximately 21 days.\n3 Main results\nFollowing previous work (Brown et al., 2020), we\nconsider zero-shot and few-shot tasks, and report\nresults on a total of 20 benchmarks:\n•Zero-shot. We provide a textual description\nof the task and a test example. The model\neither provides an answer using open-ended\ngeneration, or ranks the proposed answers.\n•Few-shot. We provide a few examples of the\ntask (between 1 and 64) and a test example.\nThe model takes this text as input and gener-\nates the answer or ranks different options.\nWe compare LLaMA with other foundation mod-\nels, namely the non-publicly available language\nmodels GPT-3 (Brown et al., 2020), Gopher (Rae' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 3}
page_content='task (between 1 and 64) and a test example.\nThe model takes this text as input and gener-\nates the answer or ranks different options.\nWe compare LLaMA with other foundation mod-\nels, namely the non-publicly available language\nmodels GPT-3 (Brown et al., 2020), Gopher (Rae\net al., 2021), Chinchilla (Hoffmann et al., 2022)\nand PaLM (Chowdhery et al., 2022), as well as\nthe open-sourced OPT models (Zhang et al., 2022),\nGPT-J (Wang and Komatsuzaki, 2021), and GPT-\nNeo (Black et al., 2022). In Section 4, we also\nbrieﬂy compare LLaMA with instruction-tuned\nmodels such as OPT-IML (Iyer et al., 2022) and\nFlan-PaLM (Chung et al., 2022).We evaluate LLaMA on free-form generation\ntasks and multiple choice tasks. In the multiple\nchoice tasks, the objective is to select the most\nappropriate completion among a set of given op-\ntions, based on a provided context. We select the\ncompletion with the highest likelihood given the\nprovided context. We follow Gao et al. (2021)' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 3}
page_content='tasks and multiple choice tasks. In the multiple\nchoice tasks, the objective is to select the most\nappropriate completion among a set of given op-\ntions, based on a provided context. We select the\ncompletion with the highest likelihood given the\nprovided context. We follow Gao et al. (2021)\nand use the likelihood normalized by the number\nof characters in the completion, except for certain\ndatasets (OpenBookQA, BoolQ), for which we fol-\nlow Brown et al. (2020), and select a completion\nbased on the likelihood normalized by the likeli-\nhood of the completion given “Answer:” as context:\nP(completionjcontext )=P(completionj\\Answer :").\n0-shot 1-shot 5-shot 64-shot\nGPT-3 175B 14.6 23.0 - 29.9\nGopher 280B 10.1 - 24.5 28.2\nChinchilla 70B 16.6 - 31.5 35.5\nPaLM8B 8.4 10.6 - 14.6\n62B 18.1 26.5 - 27.6\n540B 21.2 29.3 - 39.6\nLLaMA7B 16.8 18.7 22.0 26.1\n13B 20.1 23.4 28.1 31.9\n33B 24.9 28.3 32.9 36.0\n65B 23.8 31.0 35.0 39.9\nTable 4: NaturalQuestions. Exact match performance.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 3}
page_content='Gopher 280B 10.1 - 24.5 28.2\nChinchilla 70B 16.6 - 31.5 35.5\nPaLM8B 8.4 10.6 - 14.6\n62B 18.1 26.5 - 27.6\n540B 21.2 29.3 - 39.6\nLLaMA7B 16.8 18.7 22.0 26.1\n13B 20.1 23.4 28.1 31.9\n33B 24.9 28.3 32.9 36.0\n65B 23.8 31.0 35.0 39.9\nTable 4: NaturalQuestions. Exact match performance.\n3.1 Common Sense Reasoning\nWe consider eight standard common sense rea-\nsoning benchmarks: BoolQ (Clark et al., 2019),\nPIQA (Bisk et al., 2020), SIQA (Sap et al., 2019),' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 3}
page_content='HellaSwag (Zellers et al., 2019), WinoGrande (Sak-\naguchi et al., 2021), ARC easy and challenge (Clark\net al., 2018) and OpenBookQA (Mihaylov et al.,\n2018). These datasets include Cloze and Winograd\nstyle tasks, as well as multiple choice question an-\nswering. We evaluate in the zero-shot setting as\ndone in the language modeling community.\nIn Table 3, we compare with existing models\nof various sizes and report numbers from the cor-\nresponding papers. First, LLaMA-65B outper-\nforms Chinchilla-70B on all reported benchmarks\nbut BoolQ. Similarly, this model surpasses PaLM-\n540B everywhere but on BoolQ and WinoGrande.\nLLaMA-13B model also outperforms GPT-3 on\nmost benchmarks despite being 10 \x02smaller.\n3.2 Closed-book Question Answering\nWe compare LLaMA to existing large language\nmodels on two closed-book question answering\nbenchmarks: Natural Questions (Kwiatkowski\net al., 2019) and TriviaQA (Joshi et al., 2017). For\nboth benchmarks, we report exact match perfor-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 4}
page_content='3.2 Closed-book Question Answering\nWe compare LLaMA to existing large language\nmodels on two closed-book question answering\nbenchmarks: Natural Questions (Kwiatkowski\net al., 2019) and TriviaQA (Joshi et al., 2017). For\nboth benchmarks, we report exact match perfor-\nmance in a closed book setting, i.e., where the mod-\nels do not have access to documents that contain\nevidence to answer the question. In Table 4, we\nreport performance on NaturalQuestions, and in Ta-\nble 5, we report on TriviaQA. On both benchmarks,\nLLaMA-65B achieve state-of-the-arts performance\nin the zero-shot and few-shot settings. More im-\nportantly, the LLaMA-13B is also competitive on\nthese benchmarks with GPT-3 and Chinchilla, de-\nspite being 5-10 \x02smaller. This model runs on a\nsingle V100 GPU during inference.\n0-shot 1-shot 5-shot 64-shot\nGopher 280B 43.5 - 57.0 57.2\nChinchilla 70B 55.4 - 64.1 64.6\nLLaMA7B 50.0 53.4 56.3 57.6\n13B 56.6 60.5 63.1 64.0\n33B 65.1 67.9 69.9 70.4\n65B 68.2 71.6 72.6 73.0' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 4}
page_content='spite being 5-10 \x02smaller. This model runs on a\nsingle V100 GPU during inference.\n0-shot 1-shot 5-shot 64-shot\nGopher 280B 43.5 - 57.0 57.2\nChinchilla 70B 55.4 - 64.1 64.6\nLLaMA7B 50.0 53.4 56.3 57.6\n13B 56.6 60.5 63.1 64.0\n33B 65.1 67.9 69.9 70.4\n65B 68.2 71.6 72.6 73.0\nTable 5: TriviaQA. Zero-shot and few-shot exact\nmatch performance on the ﬁltered dev set.\n3.3 Reading Comprehension\nWe evaluate our models on the RACE reading com-\nprehension benchmark (Lai et al., 2017). This\ndataset was collected from English reading com-\nprehension exams designed for middle and highRACE-middle RACE-high\nGPT-3 175B 58.4 45.5\nPaLM8B 57.9 42.3\n62B 64.3 47.5\n540B 68.1 49.1\nLLaMA7B 61.1 46.9\n13B 61.6 47.2\n33B 64.1 48.3\n65B 67.9 51.6\nTable 6: Reading Comprehension. Zero-shot accu-\nracy.\nschool Chinese students. We follow the evaluation\nsetup from Brown et al. (2020) and report results\nin Table 6. On these benchmarks, LLaMA-65B is\ncompetitive with PaLM-540B, and, LLaMA-13B' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 4}
page_content='13B 61.6 47.2\n33B 64.1 48.3\n65B 67.9 51.6\nTable 6: Reading Comprehension. Zero-shot accu-\nracy.\nschool Chinese students. We follow the evaluation\nsetup from Brown et al. (2020) and report results\nin Table 6. On these benchmarks, LLaMA-65B is\ncompetitive with PaLM-540B, and, LLaMA-13B\noutperforms GPT-3 by a few percents.\n3.4 Mathematical reasoning\nWe evaluate our models on two mathematical rea-\nsoning benchmarks: MATH (Hendrycks et al.,\n2021) and GSM8k (Cobbe et al., 2021). MATH\nis a dataset of 12K middle school and high school\nmathematics problems written in LaTeX. GSM8k\nis a set of middle school mathematical problems.\nIn Table 7, we compare with PaLM and Min-\nerva (Lewkowycz et al., 2022). Minerva is a series\nof PaLM models ﬁnetuned on 38.5B tokens ex-\ntracted from ArXiv and Math Web Pages, while\nneither PaLM or LLaMA are ﬁnetuned on mathe-\nmatical data. The numbers for PaLM and Minerva\nare taken from Lewkowycz et al. (2022), and we\ncompare with and without maj1@k .maj1@k de-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 4}
page_content='of PaLM models ﬁnetuned on 38.5B tokens ex-\ntracted from ArXiv and Math Web Pages, while\nneither PaLM or LLaMA are ﬁnetuned on mathe-\nmatical data. The numbers for PaLM and Minerva\nare taken from Lewkowycz et al. (2022), and we\ncompare with and without maj1@k .maj1@k de-\nnotes evaluations where we generate ksamples for\neach problem and perform a majority voting (Wang\net al., 2022). On GSM8k, we observe that LLaMA-\n65B outperforms Minerva-62B, although it has not\nbeen ﬁne-tuned on mathematical data.\n3.5 Code generation\nWe evaluate the ability of our models to write\ncode from a natural language description on two\nbenchmarks: HumanEval (Chen et al., 2021) and\nMBPP (Austin et al., 2021). For both tasks, the\nmodel receives a description of the program in a\nfew sentences, as well as a few input-output ex-\namples. In HumanEval, it also receives a function\nsignature, and the prompt is formatted as natural\ncode with the textual description and tests in a' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 4}
page_content='MATH +maj1@k GSM8k +maj1@k\nPaLM8B 1.5 - 4.1 -\n62B 4.4 - 33.0 -\n540B 8.8 - 56.5 -\nMinerva8B 14.1 25.4 16.2 28.4\n62B 27.6 43.4 52.4 68.5\n540B 33.6 50.3 68.5 78.5\nLLaMA7B 2.9 6.9 11.0 18.1\n13B 3.9 8.8 17.8 29.3\n33B 7.1 15.2 35.6 53.1\n65B 10.6 20.5 50.9 69.7\nTable 7: Model performance on quantitative reason-\ning datasets. For majority voting, we use the same\nsetup as Minerva, with k= 256 samples for MATH\nandk= 100 for GSM8k (Minerva 540B uses k= 64\nfor MATH and and k= 40 for GSM8k). LLaMA-65B\noutperforms Minerva 62B on GSM8k, although it has\nnot been ﬁne-tuned on mathematical data.\ndocstring. The model needs to generate a Python\nprogram that ﬁts the description and satisﬁes the\ntest cases. In Table 8, we compare the pass@1\nscores of our models with existing language mod-\nels that have not been ﬁnetuned on code, namely\nPaLM and LaMDA (Thoppilan et al., 2022). PaLM\nand LLaMA were trained on datasets that contain\na similar number of code tokens.\nAs show in Table 8, for a similar number' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='scores of our models with existing language mod-\nels that have not been ﬁnetuned on code, namely\nPaLM and LaMDA (Thoppilan et al., 2022). PaLM\nand LLaMA were trained on datasets that contain\na similar number of code tokens.\nAs show in Table 8, for a similar number\nof parameters, LLaMA outperforms other gen-\neral models such as LaMDA and PaLM, which\nare not trained or ﬁnetuned speciﬁcally for code.\nLLaMA with 13B parameters and more outper-\nforms LaMDA 137B on both HumanEval and\nMBPP. LLaMA 65B also outperforms PaLM 62B,\neven when it is trained longer. The pass@1 results\nreported in this table were obtained by sampling\nwith temperature 0.1. The pass@100 and pass@80\nmetrics were obtained with temperature 0.8. We\nuse the same method as Chen et al. (2021) to obtain\nunbiased estimates of the pass@k.\nIt is possible to improve the performance on code\nby ﬁnetuning on code-speciﬁc tokens. For instance,\nPaLM-Coder (Chowdhery et al., 2022) increases\nthe pass@1 score of PaLM on HumanEval from' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='use the same method as Chen et al. (2021) to obtain\nunbiased estimates of the pass@k.\nIt is possible to improve the performance on code\nby ﬁnetuning on code-speciﬁc tokens. For instance,\nPaLM-Coder (Chowdhery et al., 2022) increases\nthe pass@1 score of PaLM on HumanEval from\n26.2% for PaLM to 36%. Other models trained\nspeciﬁcally for code also perform better than gen-\neral models on these tasks (Chen et al., 2021; Ni-\njkamp et al., 2022; Fried et al., 2022). Finetuning\non code tokens is beyond the scope of this paper.Params HumanEval MBPP\npass@ @1 @100 @1 @80\nLaMDA 137B 14.0 47.3 14.8 62.4\nPaLM 8B 3.6\x0318.7\x035.0\x0335.7\x03\nPaLM 62B 15.9 46.3\x0321.4 63.2\x03\nPaLM-cont 62B 23.7 - 31.2 -\nPaLM 540B 26.2 76.2 36.8 75.0\nLLaMA7B 10.5 36.5 17.7 56.2\n13B 15.8 52.5 22.0 64.0\n33B 21.7 70.7 30.2 73.4\n65B 23.7 79.3 37.7 76.8\nTable 8: Model performance for code generation.\nWe report the pass@ score on HumanEval and MBPP.\nHumanEval generations are done in zero-shot and' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='PaLM 540B 26.2 76.2 36.8 75.0\nLLaMA7B 10.5 36.5 17.7 56.2\n13B 15.8 52.5 22.0 64.0\n33B 21.7 70.7 30.2 73.4\n65B 23.7 79.3 37.7 76.8\nTable 8: Model performance for code generation.\nWe report the pass@ score on HumanEval and MBPP.\nHumanEval generations are done in zero-shot and\nMBBP with 3-shot prompts similar to Austin et al.\n(2021). The values marked with\x03are read from ﬁgures\nin Chowdhery et al. (2022).\n3.6 Massive Multitask Language\nUnderstanding\nThe massive multitask language understanding\nbenchmark, or MMLU, introduced by Hendrycks\net al. (2020) consists of multiple choice questions\ncovering various domains of knowledge, includ-\ning humanities, STEM and social sciences. We\nevaluate our models in the 5-shot setting, using the\nexamples provided by the benchmark, and report\nresults in Table 9. On this benchmark, we observe\nthat the LLaMA-65B is behind both Chinchilla-\n70B and PaLM-540B by a few percent in average,\nand across most domains. A potential explanation' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='evaluate our models in the 5-shot setting, using the\nexamples provided by the benchmark, and report\nresults in Table 9. On this benchmark, we observe\nthat the LLaMA-65B is behind both Chinchilla-\n70B and PaLM-540B by a few percent in average,\nand across most domains. A potential explanation\nis that we have used a limited amount of books\nand academic papers in our pre-training data, i.e.,\nArXiv, Gutenberg and Books3, that sums up to only\n177GB, while these models were trained on up to\n2TB of books. This large quantity of books used\nby Gopher, Chinchilla and PaLM may also explain\nwhy Gopher outperforms GPT-3 on this benchmark,\nwhile it is comparable on other benchmarks.\n3.7 Evolution of performance during training\nDuring training, we tracked the performance of our\nmodels on a few question answering and common\nsense benchmarks, and report them in Figure 2.\nOn most benchmarks, the performance improves\nsteadily, and correlates with the training perplexity' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='3.7 Evolution of performance during training\nDuring training, we tracked the performance of our\nmodels on a few question answering and common\nsense benchmarks, and report them in Figure 2.\nOn most benchmarks, the performance improves\nsteadily, and correlates with the training perplexity\nof the model (see Figure 1). The exceptions are\nSIQA and WinoGrande. Most notably, on SIQA,\nwe observe a lot of variance in performance,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 5}
page_content='Humanities STEM Social Sciences Other Average\nGPT-NeoX 20B 29.8 34.9 33.7 37.7 33.6\nGPT-3 175B 40.8 36.7 50.4 48.8 43.9\nGopher 280B 56.2 47.4 71.9 66.1 60.0\nChinchilla 70B 63.6 54.9 79.3 73.9 67.5\nPaLM8B 25.6 23.8 24.1 27.8 25.4\n62B 59.5 41.9 62.7 55.8 53.7\n540B 77.0 55.6 81.0 69.6 69.3\nLLaMA7B 34.0 30.5 38.3 38.1 35.1\n13B 45.0 35.8 53.8 53.3 46.9\n33B 55.8 46.0 66.7 63.4 57.8\n65B 61.8 51.7 72.9 67.4 63.4\nTable 9: Massive Multitask Language Understanding (MMLU). Five-shot accuracy.\nthat may indicate that this benchmark is not\nreliable. On WinoGrande, the performance does\nnot correlate as well with training perplexity:\nthe LLaMA-33B and LLaMA-65B have similar\nperformance during the training.\n4 Instruction Finetuning\nIn this section, we show that brieﬂy ﬁnetuning on\ninstructions data rapidly leads to improvements\non MMLU. Although the non-ﬁnetuned version\nof LLaMA-65B is already able to follow basic in-\nstructions, we observe that a very small amount of' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 6}
page_content='performance during the training.\n4 Instruction Finetuning\nIn this section, we show that brieﬂy ﬁnetuning on\ninstructions data rapidly leads to improvements\non MMLU. Although the non-ﬁnetuned version\nof LLaMA-65B is already able to follow basic in-\nstructions, we observe that a very small amount of\nﬁnetuning improves the performance on MMLU,\nand further improves the ability of the model to\nfollow instructions. Since this is not the focus of\nthis paper, we only conducted a single experiment\nfollowing the same protocol as Chung et al. (2022)\nto train an instruct model, LLaMA-I.\nOPT 30B 26.1\nGLM 120B 44.8\nPaLM 62B 55.1\nPaLM-cont 62B 62.8\nChinchilla 70B 67.5\nLLaMA 65B 63.4\nOPT-IML-Max 30B 43.2\nFlan-T5-XXL 11B 55.1\nFlan-PaLM 62B 59.6\nFlan-PaLM-cont 62B 66.1\nLLaMA-I 65B 68.9\nTable 10: Instruction ﬁnetuning – MMLU (5-shot).\nComparison of models of moderate size with and with-\nout instruction ﬁnetuning on MMLU.In Table 10, we report the results of our instruct' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 6}
page_content='OPT-IML-Max 30B 43.2\nFlan-T5-XXL 11B 55.1\nFlan-PaLM 62B 59.6\nFlan-PaLM-cont 62B 66.1\nLLaMA-I 65B 68.9\nTable 10: Instruction ﬁnetuning – MMLU (5-shot).\nComparison of models of moderate size with and with-\nout instruction ﬁnetuning on MMLU.In Table 10, we report the results of our instruct\nmodel LLaMA-I on MMLU and compare with ex-\nisting instruction ﬁnetuned models of moderate\nsizes, namely, OPT-IML (Iyer et al., 2022) and the\nFlan-PaLM series (Chung et al., 2022). All the re-\nported numbers are from the corresponding papers.\nDespite the simplicity of the instruction ﬁnetuning\napproach used here, we reach 68.9% on MMLU.\nLLaMA-I (65B) outperforms on MMLU existing\ninstruction ﬁnetuned models of moderate sizes, but\nare still far from the state-of-the-art, that is 77.4\nfor GPT code-davinci-002 on MMLU (numbers\ntaken from Iyer et al. (2022)). The details of the\nperformance on MMLU on the 57 tasks can be\nfound in Table 16 of the appendix.\n5 Bias, Toxicity and Misinformation' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 6}
page_content='are still far from the state-of-the-art, that is 77.4\nfor GPT code-davinci-002 on MMLU (numbers\ntaken from Iyer et al. (2022)). The details of the\nperformance on MMLU on the 57 tasks can be\nfound in Table 16 of the appendix.\n5 Bias, Toxicity and Misinformation\nLarge language models have been showed to re-\nproduce and amplify biases that are existing in\nthe training data (Sheng et al., 2019; Kurita et al.,\n2019), and to generate toxic or offensive con-\ntent (Gehman et al., 2020). As our training dataset\ncontains a large proportion of data from the Web,\nwe believe that it is crucial to determine the po-\ntential for our models to generate such content.\nTo understand the potential harm of LLaMA-65B,\nwe evaluate on different benchmarks that measure\ntoxic content production and stereotypes detection.\nWhile we have selected some of the standard bench-\nmarks that are used by the language model com-\nmunity to indicate some of the issues with these' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 6}
page_content='To understand the potential harm of LLaMA-65B,\nwe evaluate on different benchmarks that measure\ntoxic content production and stereotypes detection.\nWhile we have selected some of the standard bench-\nmarks that are used by the language model com-\nmunity to indicate some of the issues with these\nmodels, these evaluations are not sufﬁcient to fully\nunderstand the risks associated with these models.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 6}
page_content='0 250 500 750 1000 1250 1500203040506070AccuracyTriviaQA\n0 250 500 750 1000 1250 15005055606570758085HellaSwag\n0 250 500 750 1000 1250 150005101520253035NaturalQuestions\n0 250 500 750 1000 1250 1500\nBillion of tokens40424446485052AccuracySIQA\n0 250 500 750 1000 1250 1500\nBillion of tokens50556065707580WinoGrande\n0 250 500 750 1000 1250 1500\nBillion of tokens65.067.570.072.575.077.580.082.5PIQA\nLLaMA 7B\nLLaMA 13B\nLLaMA 33B\nLLaMA 65B\nChinchillaFigure 2: Evolution of performance on question answering and common sense reasoning during training.\n5.1 RealToxicityPrompts\nLanguage models can generate toxic language, e.g.,\ninsults, hate speech or threats. There is a very large\nrange of toxic content that a model can generate,\nmaking a thorough evaluation challenging. Several\nrecent work (Zhang et al., 2022; Hoffmann et al.,\n2022) have considered the RealToxicityPrompts\nbenchmark (Gehman et al., 2020) as an indicator\nof how toxic is their model. RealToxicityPrompts' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 7}
page_content='range of toxic content that a model can generate,\nmaking a thorough evaluation challenging. Several\nrecent work (Zhang et al., 2022; Hoffmann et al.,\n2022) have considered the RealToxicityPrompts\nbenchmark (Gehman et al., 2020) as an indicator\nof how toxic is their model. RealToxicityPrompts\nconsists of about 100k prompts that the model must\ncomplete; then a toxicity score is automatically\nevaluated by making a request to PerspectiveAPI3.\nWe do not have control over the pipeline used by\nthe third-party PerspectiveAPI, making comparison\nwith previous models difﬁcult.\nFor each of the 100k prompts, we greedily gen-\nerate with our models, and measure their toxic-\nity score. The score per prompt ranges from 0\n(non-toxic) to 1 (toxic). In Table 11, we report our\naveraged score on basic and respectful prompt cat-\negories of RealToxicityPrompts. These scores are\n“comparable” with what we observe in the litera-\nture (e.g., 0.087 for Chinchilla) but the method-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 7}
page_content='ity score. The score per prompt ranges from 0\n(non-toxic) to 1 (toxic). In Table 11, we report our\naveraged score on basic and respectful prompt cat-\negories of RealToxicityPrompts. These scores are\n“comparable” with what we observe in the litera-\nture (e.g., 0.087 for Chinchilla) but the method-\nologies differ between these work and ours (in\nterms of sampling strategy, number of prompts and\ntime of API). We observe that toxicity increases\n3https://perspectiveapi.com/Basic Respectful\nLLaMA7B 0.106 0.081\n13B 0.104 0.095\n33B 0.107 0.087\n65B 0.128 0.141\nTable 11: RealToxicityPrompts. We run a greedy de-\ncoder on the 100k prompts from this benchmark. The\n“respectful” versions are prompts starting with “Com-\nplete the following sentence in a polite, respectful, and\nunbiased manner:”, and “Basic” is without it. Scores\nwere obtained using the PerplexityAPI, with higher\nscore indicating more toxic generations.\nwith the size of the model, especially for Respect-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 7}
page_content='plete the following sentence in a polite, respectful, and\nunbiased manner:”, and “Basic” is without it. Scores\nwere obtained using the PerplexityAPI, with higher\nscore indicating more toxic generations.\nwith the size of the model, especially for Respect-\nful prompts. This was also observed in previous\nwork (Zhang et al., 2022), with the notable excep-\ntion of Hoffmann et al. (2022) where they do not\nsee a difference between Chinchilla and Gopher,\ndespite different sizes. This could be explained by\nthe fact that the larger model, Gopher, has worse\nperformance than Chinchilla, suggesting that the\nrelation between toxicity and model size may only\napply within a model family.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 7}
page_content='LLaMA GPT3 OPT\nGender 70.6 62.6 65.7\nReligion 79.0 73.3 68.6\nRace/Color 57.0 64.7 68.6\nSexual orientation 81.0 76.2 78.6\nAge 70.1 64.4 67.8\nNationality 64.2 61.6 62.9\nDisability 66.7 76.7 76.7\nPhysical appearance 77.8 74.6 76.2\nSocioeconomic status 71.5 73.8 76.2\nAverage 66.6 67.2 69.5\nTable 12: CrowS-Pairs. We compare the level of bi-\nases contained in LLaMA-65B with OPT-175B and\nGPT3-175B. Higher score indicates higher bias.\n5.2 CrowS-Pairs\nWe evaluate the biases in our model on the CrowS-\nPairs (Nangia et al., 2020). This dataset allows to\nmeasure biases in 9 categories: gender, religion,\nrace/color, sexual orientation, age, nationality, dis-\nability, physical appearance and socioeconomic sta-\ntus. Each example is composed of a stereotype and\nan anti-stereotype, we measure the model prefer-\nence for the stereotypical sentence using the per-\nplexity of both sentences in a zero-shot setting.\nHigher scores thus indicate higher bias. We com-\npare with GPT-3 and OPT-175B in Table 12.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='tus. Each example is composed of a stereotype and\nan anti-stereotype, we measure the model prefer-\nence for the stereotypical sentence using the per-\nplexity of both sentences in a zero-shot setting.\nHigher scores thus indicate higher bias. We com-\npare with GPT-3 and OPT-175B in Table 12.\nLLaMA compares slightly favorably to both\nmodels on average. Our model is particularly bi-\nased in the religion category (+10% compared to\nOPT-175B), followed by age and gender. We ex-\npect these biases to come from CommonCrawl de-\nspite multiple ﬁltering steps.\n5.3 WinoGender\nTo further investigate the biases of our model on\nthe gender category, we look at the WinoGender\nbenchmark (Rudinger et al., 2018), a co-reference\nresolution dataset. WinoGender is made of Wino-\ngrad schema, and biases are evaluated by determin-\ning if a model co-reference resolution performance\nis impacted by the gender of the pronoun.\nMore precisely, each sentence has three men-\ntions: an “occupation”, a “participant”, and a' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='resolution dataset. WinoGender is made of Wino-\ngrad schema, and biases are evaluated by determin-\ning if a model co-reference resolution performance\nis impacted by the gender of the pronoun.\nMore precisely, each sentence has three men-\ntions: an “occupation”, a “participant”, and a\n“pronoun” where the pronoun is co-referencing\neither the occupation or participant. We prompt\nthe model to determine the co-reference relation\nand measure if it does so correctly according tothe context of the sentence. The goal is to reveal\nif societal biases associated with occupations\nhave been captured by the model. For example,\na sentence in the WinoGender dataset is “The\nnurse notiﬁed the patient that his shift would be\nending in an hour.”, which is followed by ‘His’\nrefers to . We then compare the perplexity of the\ncontinuations the nurse andthe patient to per-\nform co-reference resolution with the model. We\nevaluate the performance when using 3 pronouns:' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='nurse notiﬁed the patient that his shift would be\nending in an hour.”, which is followed by ‘His’\nrefers to . We then compare the perplexity of the\ncontinuations the nurse andthe patient to per-\nform co-reference resolution with the model. We\nevaluate the performance when using 3 pronouns:\n“her/her/she”, “his/him/he” and “their/them/some-\none” (the different choices corresponding to the\ngrammatical function of the pronoun.\nIn Table 13, we report the co-reference scores\nfor the three different pronouns contained in the\ndataset. We observe that our model is signiﬁcantly\nbetter at performing co-reference resolution for\nthe “their/them/someone” pronouns than for the\n“her/her/she” and “his/him/he” pronouns. A simi-\nlar observation was made in previous work (Rae\net al., 2021; Hoffmann et al., 2022), and is likely\nindicative of gender bias. Indeed, in the case of the\n“her/her/she” and “his/him/he” pronouns, the model\nis probably using the majority gender of the occu-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='lar observation was made in previous work (Rae\net al., 2021; Hoffmann et al., 2022), and is likely\nindicative of gender bias. Indeed, in the case of the\n“her/her/she” and “his/him/he” pronouns, the model\nis probably using the majority gender of the occu-\npation to perform co-reference resolution, instead\nof using the evidence of the sentence.\nTo further investigate this hypothesis, we look\nat the set of “gotcha” cases for the “her/her/she”\nand “his/him/he” pronouns in the WinoGender\ndataset. Theses cases correspond to sentences in\nwhich the pronoun does not match the majority\ngender of the occupation, and the occupation is\nthe correct answer. In Table 13, we observe that\nour model, LLaMA-65B, makes more errors on the\ngotcha examples, clearly showing that it capture\nsocietal biases related to gender and occupation.\nThe drop of performance exists for “her/her/she”\nand “his/him/he” pronouns, which is indicative of\nbiases regardless of gender.\n5.4 TruthfulQA' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='our model, LLaMA-65B, makes more errors on the\ngotcha examples, clearly showing that it capture\nsocietal biases related to gender and occupation.\nThe drop of performance exists for “her/her/she”\nand “his/him/he” pronouns, which is indicative of\nbiases regardless of gender.\n5.4 TruthfulQA\nTruthfulQA (Lin et al., 2021) aims to measure the\ntruthfulness of a model, i.e., its ability to identify\nwhen a claim is true. Lin et al. (2021) consider\nthe deﬁnition of “true” in the sense of “literal truth\nabout the real world”, and not claims that are only\ntrue in the context of a belief system or tradition.\nThis benchmark can evaluate the risks of a model\nto generate misinformation or false claims. The\nquestions are written in diverse style, cover 38 cat-\negories and are designed to be adversarial.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 8}
page_content='7B 13B 33B 65B\nAll 66.0 64.7 69.0 77.5\nher/her/she 65.0 66.7 66.7 78.8\nhis/him/he 60.8 62.5 62.1 72.1\ntheir/them/someone 72.1 65.0 78.3 81.7\nher/her/she ( gotcha ) 64.2 65.8 61.7 75.0\nhis/him/he ( gotcha ) 55.0 55.8 55.8 63.3\nTable 13: WinoGender. Co-reference resolution ac-\ncuracy for the LLaMA models, for different pronouns\n(“her/her/she” and “his/him/he”). We observe that our\nmodels obtain better performance on “their/them/some-\none’ pronouns than on “her/her/she” and “his/him/he’,\nwhich is likely indicative of biases.\nTruthful Truthful*Inf\nGPT-31.3B 0.31 0.19\n6B 0.22 0.19\n175B 0.28 0.25\nLLaMA7B 0.33 0.29\n13B 0.47 0.41\n33B 0.52 0.48\n65B 0.57 0.53\nTable 14: TruthfulQA. We report the fraction of truth-\nful and truthful*informative answers, as scored by spe-\ncially trained models via the OpenAI API. We follow\nthe QA prompt style used in Ouyang et al. (2022), and\nreport the performance of GPT-3 from the same paper.\nIn Table 14, we report the performance of our' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='ful and truthful*informative answers, as scored by spe-\ncially trained models via the OpenAI API. We follow\nthe QA prompt style used in Ouyang et al. (2022), and\nreport the performance of GPT-3 from the same paper.\nIn Table 14, we report the performance of our\nmodels on both questions to measure truthful mod-\nels and the intersection of truthful and informative.\nCompared to GPT-3, our model scores higher in\nboth categories, but the rate of correct answers is\nstill low, showing that our model is likely to hallu-\ncinate incorrect answers.\n6 Carbon footprint\nThe training of our models have consumed a mas-\nsive quantity of energy, responsible for the emis-\nsion of carbon dioxide. We follow the recent liter-\nature on the subject and breakdown both the total\nenergy consumption and the resulting carbon foot-\nprint in Table 15. We follow a formula for Wu et al.\n(2022) to estimate the Watt-hour, Wh, needed to\ntrain a model, as well as the tons of carbon emis-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='ature on the subject and breakdown both the total\nenergy consumption and the resulting carbon foot-\nprint in Table 15. We follow a formula for Wu et al.\n(2022) to estimate the Watt-hour, Wh, needed to\ntrain a model, as well as the tons of carbon emis-\nsions, tCO 2eq. For the Wh, we use the formula:\nWh =GPU-h\x02(GPU power consumption )\x02PUE;where we set the Power Usage Effectiveness (PUE)\nat1:1. The resulting carbon emission depends on\nthe location of the data center used to train the net-\nwork. For instance, BLOOM uses a grid that emits\n0.057 kg CO 2eq/KWh leading to 27 tCO 2eq and\nOPT a grid that emits 0.231 kg CO 2eq/KWh, lead-\ning to 82 tCO 2eq. In this study, we are interested in\ncomparing the cost in carbon emission of training\nof these models if they were trained in the same\ndata center. Hence, we do not take the location\nof data center in consideration, and use, instead,\nthe US national average carbon intensity factor of\n0.385 kg CO 2eq/KWh. This leads to the following' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='comparing the cost in carbon emission of training\nof these models if they were trained in the same\ndata center. Hence, we do not take the location\nof data center in consideration, and use, instead,\nthe US national average carbon intensity factor of\n0.385 kg CO 2eq/KWh. This leads to the following\nformula for the tons of carbon emissions:\ntCO2eq=MWh\x020:385:\nWe apply the same formula to OPT and BLOOM\nfor fair comparison. For OPT, we assume training\nrequired 34 days on 992 A100-80B (see their logs4).\nFinally, we estimate that we used 2048 A100-80GB\nfor a period of approximately 5 months to develop\nour models. This means that developing these mod-\nels would have cost around 2,638 MWh under our\nassumptions, and a total emission of 1,015 tCO 2eq.\nWe hope that releasing these models will help to\nreduce future carbon emission since the training is\nalready done, and some of the models are relatively\nsmall and can be run on a single GPU.\n7 Related work' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='assumptions, and a total emission of 1,015 tCO 2eq.\nWe hope that releasing these models will help to\nreduce future carbon emission since the training is\nalready done, and some of the models are relatively\nsmall and can be run on a single GPU.\n7 Related work\nLanguage models are probability distributions\nover sequences of words, tokens or charac-\nters (Shannon, 1948, 1951). This task, often framed\nas next token prediction, has long been considered a\ncore problem in natural language processing (Bahl\net al., 1983; Brown et al., 1990). Because Turing\n(1950) proposed to measure machine intelligence\nby using language through the “imitation game”,\nlanguage modeling has been proposed as a bench-\nmark to measure progress toward artiﬁcial intelli-\ngence (Mahoney, 1999).\nArchitecture. Traditionally, language models\nwere based on n-gram count statistics (Bahl\net al., 1983), and various smoothing techniques\nwere proposed to improve the estimation of rare' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='mark to measure progress toward artiﬁcial intelli-\ngence (Mahoney, 1999).\nArchitecture. Traditionally, language models\nwere based on n-gram count statistics (Bahl\net al., 1983), and various smoothing techniques\nwere proposed to improve the estimation of rare\nevents (Katz, 1987; Kneser and Ney, 1995). In the\npast two decades, neural networks have been suc-\ncessfully applied to the language modelling task,\n4https://github.com/facebookresearch/metaseq/\ntree/main/projects/OPT/chronicles' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 9}
page_content='GPU TypeGPU PowerGPU-hoursTotal power Carbon emitted\nconsumption consumption (tCO 2eq)\nOPT-175B A100-80GB 400W 809,472 356 MWh 137\nBLOOM-175B A100-80GB 400W 1,082,880 475 MWh 183\nLLaMA-7B A100-80GB 400W 82,432 36 MWh 14\nLLaMA-13B A100-80GB 400W 135,168 59 MWh 23\nLLaMA-33B A100-80GB 400W 530,432 233 MWh 90\nLLaMA-65B A100-80GB 400W 1,022,362 449 MWh 173\nTable 15: Carbon footprint of training different models in the same data center. We follow Wu et al. (2022)\nto compute carbon emission of training OPT, BLOOM and our models in the same data center. For the power\nconsumption of a A100-80GB, we take the thermal design power for NVLink systems, that is 400W. We take a\nPUE of 1.1 and a carbon intensity factor set at the national US average of 0.385 kg CO 2e per KWh.\nstarting from feed forward models (Bengio et al.,\n2000), recurrent neural networks (Elman, 1990;\nMikolov et al., 2010) and LSTMs (Hochreiter and\nSchmidhuber, 1997; Graves, 2013). More recently,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='PUE of 1.1 and a carbon intensity factor set at the national US average of 0.385 kg CO 2e per KWh.\nstarting from feed forward models (Bengio et al.,\n2000), recurrent neural networks (Elman, 1990;\nMikolov et al., 2010) and LSTMs (Hochreiter and\nSchmidhuber, 1997; Graves, 2013). More recently,\ntransformer networks, based on self-attention, have\nled to important improvements, especially for cap-\nturing long range dependencies (Vaswani et al.,\n2017; Radford et al., 2018; Dai et al., 2019).\nScaling. There is a long history of scaling for\nlanguage models, for both the model and dataset\nsizes. Brants et al. (2007) showed the beneﬁts of\nusing language models trained on 2 trillion tokens,\nresulting in 300 billion n-grams, on the quality of\nmachine translation. While this work relied on a\nsimple smoothing technique, called Stupid Backoff ,\nHeaﬁeld et al. (2013) later showed how to scale\nKneser-Ney smoothing to Web-scale data. This\nallowed to train a 5-gram model on 975 billions to-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='resulting in 300 billion n-grams, on the quality of\nmachine translation. While this work relied on a\nsimple smoothing technique, called Stupid Backoff ,\nHeaﬁeld et al. (2013) later showed how to scale\nKneser-Ney smoothing to Web-scale data. This\nallowed to train a 5-gram model on 975 billions to-\nkens from CommonCrawl, resulting in a model\nwith 500 billions n-grams (Buck et al., 2014).\nChelba et al. (2013) introduced the One Billion\nWord benchmark, a large scale training dataset to\nmeasure the progress of language models.\nIn the context of neural language models, Joze-\nfowicz et al. (2016) obtained state-of-the-art re-\nsults on the Billion Word benchmark by scaling\nLSTMs to 1 billion parameters. Later, scaling\ntransformers lead to improvement on many NLP\ntasks. Notable models include BERT (Devlin et al.,\n2018), GPT-2 (Radford et al., 2019), Megatron-\nLM (Shoeybi et al., 2019), and T5 (Raffel et al.,\n2020). A signiﬁcant breakthrough was obtained' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='LSTMs to 1 billion parameters. Later, scaling\ntransformers lead to improvement on many NLP\ntasks. Notable models include BERT (Devlin et al.,\n2018), GPT-2 (Radford et al., 2019), Megatron-\nLM (Shoeybi et al., 2019), and T5 (Raffel et al.,\n2020). A signiﬁcant breakthrough was obtained\nwith GPT-3 (Brown et al., 2020), a model with\n175 billion parameters. This lead to a series of\nLarge Language Models , such as Jurassic-1 (Lieber\net al., 2021), Megatron-Turing NLG (Smith et al.,2022), Gopher (Rae et al., 2021), Chinchilla (Hoff-\nmann et al., 2022), PaLM (Chowdhery et al., 2022),\nOPT (Zhang et al., 2022), and GLM (Zeng et al.,\n2022). Hestness et al. (2017) and Rosenfeld et al.\n(2019) studied the impact of scaling on the perfor-\nmance of deep learning models, showing the exis-\ntence of power laws between the model and dataset\nsizes and the performance of the system. Kaplan\net al. (2020) derived power laws speciﬁcally for\ntransformer based language models, which were' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='(2019) studied the impact of scaling on the perfor-\nmance of deep learning models, showing the exis-\ntence of power laws between the model and dataset\nsizes and the performance of the system. Kaplan\net al. (2020) derived power laws speciﬁcally for\ntransformer based language models, which were\nlater reﬁned by Hoffmann et al. (2022), by adapting\nthe learning rate schedule when scaling datasets.\nFinally, Wei et al. (2022) studied the effect of scal-\ning on the abilities of large language models.\n8 Conclusion\nIn this paper, we presented a series of language\nmodels that are released openly, and competitive\nwith state-of-the-art foundation models. Most\nnotably, LLaMA-13B outperforms GPT-3 while\nbeing more than 10 \x02smaller, and LLaMA-65B is\ncompetitive with Chinchilla-70B and PaLM-540B.\nUnlike previous studies, we show that it is possible\nto achieve state-of-the-art performance by training\nexclusively on publicly available data, without\nresorting to proprietary datasets. We hope that' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='being more than 10 \x02smaller, and LLaMA-65B is\ncompetitive with Chinchilla-70B and PaLM-540B.\nUnlike previous studies, we show that it is possible\nto achieve state-of-the-art performance by training\nexclusively on publicly available data, without\nresorting to proprietary datasets. We hope that\nreleasing these models to the research community\nwill accelerate the development of large language\nmodels, and help efforts to improve their robust-\nness and mitigate known issues such as toxicity and\nbias. Additionally, we observed like Chung et al.\n(2022) that ﬁnetuning these models on instructions\nlead to promising results, and we plan to further\ninvestigate this in future work. Finally, we plan to\nrelease larger models trained on larger pretraining\ncorpora in the future, since we have seen a constant\nimprovement in performance as we were scaling.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 10}
page_content='Acknowledgements\nWe thank Daniel Haziza, Francisco Massa, Jeremy\nReizenstein, Artem Korenev, and Patrick Labatut\nfrom the xformers team. We thank Susan Zhang\nand Stephen Roller for their support on data\ndeduplication. We thank Luca Wehrstedt, Vegard\nMella, and Pierre-Emmanuel Mazaré for their\nsupport on training stability. We thank Shubho\nSengupta, Kalyan Saladi, and all the AI infra team\nfor their support. We thank Jane Yu for her input\non evaluation. We thank Yongyi Hu for his help\non data collection.\nReferences\nJacob Austin, Augustus Odena, Maxwell Nye, Maarten\nBosma, Henryk Michalewski, David Dohan, Ellen\nJiang, Carrie Cai, Michael Terry, Quoc Le, and\nCharles Sutton. 2021. Program synthesis with large\nlanguage models.\nLalit R Bahl, Frederick Jelinek, and Robert L Mercer.\n1983. A maximum likelihood approach to continu-\nous speech recognition. IEEE transactions on pat-\ntern analysis and machine intelligence , pages 179–\n190.\nYoshua Bengio, Réjean Ducharme, and Pascal Vincent.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='language models.\nLalit R Bahl, Frederick Jelinek, and Robert L Mercer.\n1983. A maximum likelihood approach to continu-\nous speech recognition. IEEE transactions on pat-\ntern analysis and machine intelligence , pages 179–\n190.\nYoshua Bengio, Réjean Ducharme, and Pascal Vincent.\n2000. A neural probabilistic language model. Ad-\nvances in neural information processing systems , 13.\nYonatan Bisk, Rowan Zellers, Jianfeng Gao, Yejin\nChoi, et al. 2020. Piqa: Reasoning about physi-\ncal commonsense in natural language. In Proceed-\nings of the AAAI conference on artiﬁcial intelligence ,\npages 7432–7439.\nSid Black, Stella Biderman, Eric Hallahan, Quentin An-\nthony, Leo Gao, Laurence Golding, Horace He, Con-\nnor Leahy, Kyle McDonell, Jason Phang, et al. 2022.\nGpt-neox-20b: An open-source autoregressive lan-\nguage model. arXiv preprint arXiv:2204.06745 .\nThorsten Brants, Ashok C. Popat, Peng Xu, Franz J.\nOch, and Jeffrey Dean. 2007. Large language mod-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='thony, Leo Gao, Laurence Golding, Horace He, Con-\nnor Leahy, Kyle McDonell, Jason Phang, et al. 2022.\nGpt-neox-20b: An open-source autoregressive lan-\nguage model. arXiv preprint arXiv:2204.06745 .\nThorsten Brants, Ashok C. Popat, Peng Xu, Franz J.\nOch, and Jeffrey Dean. 2007. Large language mod-\nels in machine translation. In Proceedings of the\n2007 Joint Conference on Empirical Methods in Nat-\nural Language Processing and Computational Nat-\nural Language Learning (EMNLP-CoNLL) , pages\n858–867, Prague, Czech Republic. Association for\nComputational Linguistics.\nPeter F Brown, John Cocke, Stephen A Della Pietra,\nVincent J Della Pietra, Frederick Jelinek, John Laf-\nferty, Robert L Mercer, and Paul S Roossin. 1990. A\nstatistical approach to machine translation. Compu-\ntational linguistics , 16(2):79–85.\nTom B. Brown, Benjamin Mann, Nick Ryder, Melanie\nSubbiah, Jared Kaplan, Prafulla Dhariwal, Arvind' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='Vincent J Della Pietra, Frederick Jelinek, John Laf-\nferty, Robert L Mercer, and Paul S Roossin. 1990. A\nstatistical approach to machine translation. Compu-\ntational linguistics , 16(2):79–85.\nTom B. Brown, Benjamin Mann, Nick Ryder, Melanie\nSubbiah, Jared Kaplan, Prafulla Dhariwal, Arvind\nNeelakantan, Pranav Shyam, Girish Sastry, AmandaAskell, Sandhini Agarwal, Ariel Herbert-V oss,\nGretchen Krueger, Tom Henighan, Rewon Child,\nAditya Ramesh, Daniel M. Ziegler, Jeffrey Wu,\nClemens Winter, Christopher Hesse, Mark Chen,\nEric Sigler, Mateusz Litwin, Scott Gray, Benjamin\nChess, Jack Clark, Christopher Berner, Sam Mc-\nCandlish, Alec Radford, Ilya Sutskever, and Dario\nAmodei. 2020. Language models are few-shot learn-\ners.\nChristian Buck, Kenneth Heaﬁeld, and Bas Van Ooyen.\n2014. N-gram counts and language models from the\ncommon crawl. In LREC , volume 2, page 4.\nCiprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge,\nThorsten Brants, Phillipp Koehn, and Tony Robin-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='Amodei. 2020. Language models are few-shot learn-\ners.\nChristian Buck, Kenneth Heaﬁeld, and Bas Van Ooyen.\n2014. N-gram counts and language models from the\ncommon crawl. In LREC , volume 2, page 4.\nCiprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge,\nThorsten Brants, Phillipp Koehn, and Tony Robin-\nson. 2013. One billion word benchmark for measur-\ning progress in statistical language modeling. arXiv\npreprint arXiv:1312.3005 .\nMark Chen, Jerry Tworek, Heewoo Jun, Qiming\nYuan, Henrique Ponde de Oliveira Pinto, Jared Ka-\nplan, Harri Edwards, Yuri Burda, Nicholas Joseph,\nGreg Brockman, Alex Ray, Raul Puri, Gretchen\nKrueger, Michael Petrov, Heidy Khlaaf, Girish Sas-\ntry, Pamela Mishkin, Brooke Chan, Scott Gray,\nNick Ryder, Mikhail Pavlov, Alethea Power, Lukasz\nKaiser, Mohammad Bavarian, Clemens Winter,\nPhilippe Tillet, Felipe Petroski Such, Dave Cum-\nmings, Matthias Plappert, Fotios Chantzis, Eliza-\nbeth Barnes, Ariel Herbert-V oss, William Hebgen' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='try, Pamela Mishkin, Brooke Chan, Scott Gray,\nNick Ryder, Mikhail Pavlov, Alethea Power, Lukasz\nKaiser, Mohammad Bavarian, Clemens Winter,\nPhilippe Tillet, Felipe Petroski Such, Dave Cum-\nmings, Matthias Plappert, Fotios Chantzis, Eliza-\nbeth Barnes, Ariel Herbert-V oss, William Hebgen\nGuss, Alex Nichol, Alex Paino, Nikolas Tezak, Jie\nTang, Igor Babuschkin, Suchir Balaji, Shantanu Jain,\nWilliam Saunders, Christopher Hesse, Andrew N.\nCarr, Jan Leike, Josh Achiam, Vedant Misra, Evan\nMorikawa, Alec Radford, Matthew Knight, Miles\nBrundage, Mira Murati, Katie Mayer, Peter Welin-\nder, Bob McGrew, Dario Amodei, Sam McCandlish,\nIlya Sutskever, and Wojciech Zaremba. 2021. Eval-\nuating large language models trained on code.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin,\nMaarten Bosma, Gaurav Mishra, Adam Roberts,\nPaul Barham, Hyung Won Chung, Charles Sutton,\nSebastian Gehrmann, Parker Schuh, Kensen Shi,\nSasha Tsvyashchenko, Joshua Maynez, Abhishek' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='uating large language models trained on code.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin,\nMaarten Bosma, Gaurav Mishra, Adam Roberts,\nPaul Barham, Hyung Won Chung, Charles Sutton,\nSebastian Gehrmann, Parker Schuh, Kensen Shi,\nSasha Tsvyashchenko, Joshua Maynez, Abhishek\nRao, Parker Barnes, Yi Tay, Noam Shazeer, Vin-\nodkumar Prabhakaran, Emily Reif, Nan Du, Ben\nHutchinson, Reiner Pope, James Bradbury, Jacob\nAustin, Michael Isard, Guy Gur-Ari, Pengcheng\nYin, Toju Duke, Anselm Levskaya, Sanjay Ghe-\nmawat, Sunipa Dev, Henryk Michalewski, Xavier\nGarcia, Vedant Misra, Kevin Robinson, Liam Fe-\ndus, Denny Zhou, Daphne Ippolito, David Luan,\nHyeontaek Lim, Barret Zoph, Alexander Spiridonov,\nRyan Sepassi, David Dohan, Shivani Agrawal, Mark\nOmernick, Andrew M. Dai, Thanumalayan Sankara-\nnarayana Pillai, Marie Pellat, Aitor Lewkowycz,\nErica Moreira, Rewon Child, Oleksandr Polozov,\nKatherine Lee, Zongwei Zhou, Xuezhi Wang, Bren-\nnan Saeta, Mark Diaz, Orhan Firat, Michele Catasta,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='Ryan Sepassi, David Dohan, Shivani Agrawal, Mark\nOmernick, Andrew M. Dai, Thanumalayan Sankara-\nnarayana Pillai, Marie Pellat, Aitor Lewkowycz,\nErica Moreira, Rewon Child, Oleksandr Polozov,\nKatherine Lee, Zongwei Zhou, Xuezhi Wang, Bren-\nnan Saeta, Mark Diaz, Orhan Firat, Michele Catasta,\nJason Wei, Kathy Meier-Hellstern, Douglas Eck,\nJeff Dean, Slav Petrov, and Noah Fiedel. 2022.\nPalm: Scaling language modeling with pathways.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 11}
page_content='Hyung Won Chung, Le Hou, S. Longpre, Barret\nZoph, Yi Tay, William Fedus, Eric Li, Xuezhi\nWang, Mostafa Dehghani, Siddhartha Brahma, Al-\nbert Webson, Shixiang Shane Gu, Zhuyun Dai,\nMirac Suzgun, Xinyun Chen, Aakanksha Chowdh-\nery, Dasha Valter, Sharan Narang, Gaurav Mishra,\nAdams Wei Yu, Vincent Zhao, Yanping Huang, An-\ndrew M. Dai, Hongkun Yu, Slav Petrov, Ed Huai\nhsin Chi, Jeff Dean, Jacob Devlin, Adam Roberts,\nDenny Zhou, Quoc Le, and Jason Wei. 2022. Scal-\ning instruction-ﬁnetuned language models. arXiv\npreprint arXiv:2210.11416 .\nChristopher Clark, Kenton Lee, Ming-Wei Chang,\nTom Kwiatkowski, Michael Collins, and Kristina\nToutanova. 2019. Boolq: Exploring the surprising\ndifﬁculty of natural yes/no questions. arXiv preprint\narXiv:1905.10044 .\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot,\nAshish Sabharwal, Carissa Schoenick, and Oyvind\nTafjord. 2018. Think you have solved question an-\nswering? try arc, the ai2 reasoning challenge. arXiv\npreprint arXiv:1803.05457 .' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='arXiv:1905.10044 .\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot,\nAshish Sabharwal, Carissa Schoenick, and Oyvind\nTafjord. 2018. Think you have solved question an-\nswering? try arc, the ai2 reasoning challenge. arXiv\npreprint arXiv:1803.05457 .\nKarl Cobbe, Vineet Kosaraju, Mohammad Bavarian,\nMark Chen, Heewoo Jun, Lukasz Kaiser, Matthias\nPlappert, Jerry Tworek, Jacob Hilton, Reiichiro\nNakano, et al. 2021. Training veriﬁers to solve math\nword problems. arXiv preprint arXiv:2110.14168 .\nZihang Dai, Zhilin Yang, Yiming Yang, Jaime Car-\nbonell, Quoc V Le, and Ruslan Salakhutdinov.\n2019. Transformer-xl: Attentive language mod-\nels beyond a ﬁxed-length context. arXiv preprint\narXiv:1901.02860 .\nTri Dao, Daniel Y Fu, Stefano Ermon, Atri Rudra,\nand Christopher Ré. 2022. Flashattention: Fast and\nmemory-efﬁcient exact attention with io-awareness.\narXiv preprint arXiv:2205.14135 .\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2018. Bert: Pre-training of deep' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='Tri Dao, Daniel Y Fu, Stefano Ermon, Atri Rudra,\nand Christopher Ré. 2022. Flashattention: Fast and\nmemory-efﬁcient exact attention with io-awareness.\narXiv preprint arXiv:2205.14135 .\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2018. Bert: Pre-training of deep\nbidirectional transformers for language understand-\ning. arXiv preprint arXiv:1810.04805 .\nJeffrey L Elman. 1990. Finding structure in time. Cog-\nnitive science , 14(2):179–211.\nDaniel Fried, Armen Aghajanyan, Jessy Lin, Sida\nWang, Eric Wallace, Freda Shi, Ruiqi Zhong, Wen-\ntau Yih, Luke Zettlemoyer, and Mike Lewis. 2022.\nIncoder: A generative model for code inﬁlling and\nsynthesis. arXiv preprint arXiv:2204.05999 .\nLeo Gao, Stella Biderman, Sid Black, Laurence Gold-\ning, Travis Hoppe, Charles Foster, Jason Phang,\nHorace He, Anish Thite, Noa Nabeshima, Shawn\nPresser, and Connor Leahy. 2020. The Pile: An\n800gb dataset of diverse text for language modeling.\narXiv preprint arXiv:2101.00027 .' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='Leo Gao, Stella Biderman, Sid Black, Laurence Gold-\ning, Travis Hoppe, Charles Foster, Jason Phang,\nHorace He, Anish Thite, Noa Nabeshima, Shawn\nPresser, and Connor Leahy. 2020. The Pile: An\n800gb dataset of diverse text for language modeling.\narXiv preprint arXiv:2101.00027 .\nLeo Gao, Jonathan Tow, Stella Biderman, Sid Black,\nAnthony DiPoﬁ, Charles Foster, Laurence Golding,\nJeffrey Hsu, Kyle McDonell, Niklas Muennighoff,Jason Phang, Laria Reynolds, Eric Tang, Anish\nThite, Ben Wang, Kevin Wang, and Andy Zou. 2021.\nA framework for few-shot language model evalua-\ntion.\nSamuel Gehman, Suchin Gururangan, Maarten Sap,\nYejin Choi, and Noah A Smith. 2020. Realtoxici-\ntyprompts: Evaluating neural toxic degeneration in\nlanguage models. arXiv preprint arXiv:2009.11462 .\nAlex Graves. 2013. Generating sequences with\nrecurrent neural networks. arXiv preprint\narXiv:1308.0850 .\nKenneth Heaﬁeld, Ivan Pouzyrevsky, Jonathan H Clark,\nand Philipp Koehn. 2013. Scalable modiﬁed kneser-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='language models. arXiv preprint arXiv:2009.11462 .\nAlex Graves. 2013. Generating sequences with\nrecurrent neural networks. arXiv preprint\narXiv:1308.0850 .\nKenneth Heaﬁeld, Ivan Pouzyrevsky, Jonathan H Clark,\nand Philipp Koehn. 2013. Scalable modiﬁed kneser-\nney language model estimation. In Proceedings of\nthe 51st Annual Meeting of the Association for Com-\nputational Linguistics (Volume 2: Short Papers) ,\npages 690–696.\nDan Hendrycks, Collin Burns, Steven Basart, Andy\nZou, Mantas Mazeika, Dawn Song, and Jacob Stein-\nhardt. 2020. Measuring massive multitask language\nunderstanding. arXiv preprint arXiv:2009.03300 .\nDan Hendrycks, Collin Burns, Saurav Kadavath, Akul\nArora, Steven Basart, Eric Tang, Dawn Song, and\nJacob Steinhardt. 2021. Measuring mathematical\nproblem solving with the math dataset. arXiv\npreprint arXiv:2103.03874 .\nJoel Hestness, Sharan Narang, Newsha Ardalani, Gre-\ngory Diamos, Heewoo Jun, Hassan Kianinejad,\nMd Patwary, Mostofa Ali, Yang Yang, and Yanqi' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='Jacob Steinhardt. 2021. Measuring mathematical\nproblem solving with the math dataset. arXiv\npreprint arXiv:2103.03874 .\nJoel Hestness, Sharan Narang, Newsha Ardalani, Gre-\ngory Diamos, Heewoo Jun, Hassan Kianinejad,\nMd Patwary, Mostofa Ali, Yang Yang, and Yanqi\nZhou. 2017. Deep learning scaling is predictable,\nempirically. arXiv preprint arXiv:1712.00409 .\nSepp Hochreiter and Jürgen Schmidhuber. 1997.\nLong short-term memory. Neural computation ,\n9(8):1735–1780.\nJordan Hoffmann, Sebastian Borgeaud, Arthur Mensch,\nElena Buchatskaya, Trevor Cai, Eliza Rutherford,\nDiego de Las Casas, Lisa Anne Hendricks, Johannes\nWelbl, Aidan Clark, Tom Hennigan, Eric Noland,\nKatie Millican, George van den Driessche, Bogdan\nDamoc, Aurelia Guy, Simon Osindero, Karen Si-\nmonyan, Erich Elsen, Jack W. Rae, Oriol Vinyals,\nand Laurent Sifre. 2022. Training compute-optimal\nlarge language models.\nSrinivasan Iyer, Xi Victoria Lin, Ramakanth Pasunuru,\nTodor Mihaylov, Dániel Simig, Ping Yu, Kurt Shus-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='Damoc, Aurelia Guy, Simon Osindero, Karen Si-\nmonyan, Erich Elsen, Jack W. Rae, Oriol Vinyals,\nand Laurent Sifre. 2022. Training compute-optimal\nlarge language models.\nSrinivasan Iyer, Xi Victoria Lin, Ramakanth Pasunuru,\nTodor Mihaylov, Dániel Simig, Ping Yu, Kurt Shus-\nter, Tianlu Wang, Qing Liu, Punit Singh Koura, et al.\n2022. Opt-iml: Scaling language model instruc-\ntion meta learning through the lens of generalization.\narXiv preprint arXiv:2212.12017 .\nMandar Joshi, Eunsol Choi, Daniel S Weld, and Luke\nZettlemoyer. 2017. Triviaqa: A large scale distantly\nsupervised challenge dataset for reading comprehen-\nsion. arXiv preprint arXiv:1705.03551 .' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 12}
page_content='Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam\nShazeer, and Yonghui Wu. 2016. Exploring\nthe limits of language modeling. arXiv preprint\narXiv:1602.02410 .\nJared Kaplan, Sam McCandlish, Tom Henighan,\nTom B Brown, Benjamin Chess, Rewon Child, Scott\nGray, Alec Radford, Jeffrey Wu, and Dario Amodei.\n2020. Scaling laws for neural language models.\narXiv preprint arXiv:2001.08361 .\nSlava Katz. 1987. Estimation of probabilities from\nsparse data for the language model component of a\nspeech recognizer. IEEE transactions on acoustics,\nspeech, and signal processing , 35(3):400–401.\nReinhard Kneser and Hermann Ney. 1995. Improved\nbacking-off for m-gram language modeling. In 1995\ninternational conference on acoustics, speech, and\nsignal processing , volume 1, pages 181–184. IEEE.\nVijay Korthikanti, Jared Casper, Sangkug Lym,\nLawrence McAfee, Michael Andersch, Mohammad\nShoeybi, and Bryan Catanzaro. 2022. Reducing ac-\ntivation recomputation in large transformer models.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='international conference on acoustics, speech, and\nsignal processing , volume 1, pages 181–184. IEEE.\nVijay Korthikanti, Jared Casper, Sangkug Lym,\nLawrence McAfee, Michael Andersch, Mohammad\nShoeybi, and Bryan Catanzaro. 2022. Reducing ac-\ntivation recomputation in large transformer models.\narXiv preprint arXiv:2205.05198 .\nTaku Kudo and John Richardson. 2018. Sentencepiece:\nA simple and language independent subword tok-\nenizer and detokenizer for neural text processing.\narXiv preprint arXiv:1808.06226 .\nKeita Kurita, Nidhi Vyas, Ayush Pareek, Alan W Black,\nand Yulia Tsvetkov. 2019. Quantifying social bi-\nases in contextual word representations. In 1st ACL\nWorkshop on Gender Bias for Natural Language\nProcessing .\nTom Kwiatkowski, Jennimaria Palomaki, Olivia Red-\nﬁeld, Michael Collins, Ankur Parikh, Chris Alberti,\nDanielle Epstein, Illia Polosukhin, Jacob Devlin,\nKenton Lee, et al. 2019. Natural questions: a bench-\nmark for question answering research. Transactions' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='Processing .\nTom Kwiatkowski, Jennimaria Palomaki, Olivia Red-\nﬁeld, Michael Collins, Ankur Parikh, Chris Alberti,\nDanielle Epstein, Illia Polosukhin, Jacob Devlin,\nKenton Lee, et al. 2019. Natural questions: a bench-\nmark for question answering research. Transactions\nof the Association for Computational Linguistics ,\n7:453–466.\nGuokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang,\nand Eduard Hovy. 2017. Race: Large-scale reading\ncomprehension dataset from examinations. arXiv\npreprint arXiv:1704.04683 .\nAitor Lewkowycz, Anders Johan Andreassen,\nDavid Dohan, Ethan Dyer, Henryk Michalewski,\nVinay Venkatesh Ramasesh, Ambrose Slone, Cem\nAnil, Imanol Schlag, Theo Gutman-Solo, Yuhuai\nWu, Behnam Neyshabur, Guy Gur-Ari, and Vedant\nMisra. 2022. Solving quantitative reasoning prob-\nlems with language models. In Advances in Neural\nInformation Processing Systems .\nOpher Lieber, Or Sharir, Barak Lenz, and Yoav\nShoham. 2021. Jurassic-1: Technical details and\nevaluation. White Paper. AI21 Labs , 1.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='Misra. 2022. Solving quantitative reasoning prob-\nlems with language models. In Advances in Neural\nInformation Processing Systems .\nOpher Lieber, Or Sharir, Barak Lenz, and Yoav\nShoham. 2021. Jurassic-1: Technical details and\nevaluation. White Paper. AI21 Labs , 1.\nStephanie Lin, Jacob Hilton, and Owain Evans. 2021.\nTruthfulqa: Measuring how models mimic human\nfalsehoods. arXiv preprint arXiv:2109.07958 .Ilya Loshchilov and Frank Hutter. 2017. Decou-\npled weight decay regularization. arXiv preprint\narXiv:1711.05101 .\nMatthew V Mahoney. 1999. Text compression as a test\nfor artiﬁcial intelligence. AAAI/IAAI , 970.\nTodor Mihaylov, Peter Clark, Tushar Khot, and Ashish\nSabharwal. 2018. Can a suit of armor conduct elec-\ntricity? a new dataset for open book question answer-\ning. arXiv preprint arXiv:1809.02789 .\nTomas Mikolov, Martin Karaﬁát, Lukas Burget, Jan\nCernock `y, and Sanjeev Khudanpur. 2010. Recur-\nrent neural network based language model. In In-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='Sabharwal. 2018. Can a suit of armor conduct elec-\ntricity? a new dataset for open book question answer-\ning. arXiv preprint arXiv:1809.02789 .\nTomas Mikolov, Martin Karaﬁát, Lukas Burget, Jan\nCernock `y, and Sanjeev Khudanpur. 2010. Recur-\nrent neural network based language model. In In-\nterspeech , pages 1045–1048. Makuhari.\nNikita Nangia, Clara Vania, Rasika Bhalerao, and\nSamuel R. Bowman. 2020. CrowS-pairs: A chal-\nlenge dataset for measuring social biases in masked\nlanguage models. In EMNLP 2020 .\nErik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu,\nHuan Wang, Yingbo Zhou, Silvio Savarese, and\nCaiming Xiong. 2022. Codegen: An open large lan-\nguage model for code with multi-turn program syn-\nthesis. arXiv preprint arXiv:2203.13474 .\nLong Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida,\nCarroll Wainwright, Pamela Mishkin, Chong Zhang,\nSandhini Agarwal, Katarina Slama, Alex Gray, John\nSchulman, Jacob Hilton, Fraser Kelton, Luke Miller,\nMaddie Simens, Amanda Askell, Peter Welinder,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='thesis. arXiv preprint arXiv:2203.13474 .\nLong Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida,\nCarroll Wainwright, Pamela Mishkin, Chong Zhang,\nSandhini Agarwal, Katarina Slama, Alex Gray, John\nSchulman, Jacob Hilton, Fraser Kelton, Luke Miller,\nMaddie Simens, Amanda Askell, Peter Welinder,\nPaul Christiano, Jan Leike, and Ryan Lowe. 2022.\nTraining language models to follow instructions\nwith human feedback. In Advances in Neural Infor-\nmation Processing Systems .\nMarkus N Rabe and Charles Staats. 2021. Self-\nattention does not need o(n2)memory. arXiv\npreprint arXiv:2112.05682 .\nAlec Radford, Karthik Narasimhan, Tim Salimans, Ilya\nSutskever, et al. 2018. Improving language under-\nstanding by generative pre-training.\nAlec Radford, Jeffrey Wu, Rewon Child, David Luan,\nDario Amodei, Ilya Sutskever, et al. 2019. Lan-\nguage models are unsupervised multitask learners.\nOpenAI blog , 1(8):9.\nJack W. Rae, Sebastian Borgeaud, Trevor Cai, Katie\nMillican, Jordan Hoffmann, Francis Song, John' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='Alec Radford, Jeffrey Wu, Rewon Child, David Luan,\nDario Amodei, Ilya Sutskever, et al. 2019. Lan-\nguage models are unsupervised multitask learners.\nOpenAI blog , 1(8):9.\nJack W. Rae, Sebastian Borgeaud, Trevor Cai, Katie\nMillican, Jordan Hoffmann, Francis Song, John\nAslanides, Sarah Henderson, Roman Ring, Susan-\nnah Young, Eliza Rutherford, Tom Hennigan, Ja-\ncob Menick, Albin Cassirer, Richard Powell, George\nvan den Driessche, Lisa Anne Hendricks, Mari-\nbeth Rauh, Po-Sen Huang, Amelia Glaese, Jo-\nhannes Welbl, Sumanth Dathathri, Saffron Huang,\nJonathan Uesato, John Mellor, Irina Higgins, An-\ntonia Creswell, Nat McAleese, Amy Wu, Erich\nElsen, Siddhant Jayakumar, Elena Buchatskaya,\nDavid Budden, Esme Sutherland, Karen Simonyan,\nMichela Paganini, Laurent Sifre, Lena Martens,\nXiang Lorraine Li, Adhiguna Kuncoro, Aida Ne-\nmatzadeh, Elena Gribovskaya, Domenic Donato,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 13}
page_content='Angeliki Lazaridou, Arthur Mensch, Jean-Baptiste\nLespiau, Maria Tsimpoukelli, Nikolai Grigorev,\nDoug Fritz, Thibault Sottiaux, Mantas Pajarskas,\nToby Pohlen, Zhitao Gong, Daniel Toyama, Cy-\nprien de Masson d’Autume, Yujia Li, Tayfun Terzi,\nVladimir Mikulik, Igor Babuschkin, Aidan Clark,\nDiego de Las Casas, Aurelia Guy, Chris Jones,\nJames Bradbury, Matthew Johnson, Blake Hecht-\nman, Laura Weidinger, Iason Gabriel, William Isaac,\nEd Lockhart, Simon Osindero, Laura Rimell, Chris\nDyer, Oriol Vinyals, Kareem Ayoub, Jeff Stan-\nway, Lorrayne Bennett, Demis Hassabis, Koray\nKavukcuoglu, and Geoffrey Irving. 2021. Scal-\ning language models: Methods, analysis & insights\nfrom training gopher.\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine\nLee, Sharan Narang, Michael Matena, Yanqi Zhou,\nWei Li, and Peter J Liu. 2020. Exploring the limits\nof transfer learning with a uniﬁed text-to-text trans-\nformer. The Journal of Machine Learning Research ,\n21(1):5485–5551.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='from training gopher.\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine\nLee, Sharan Narang, Michael Matena, Yanqi Zhou,\nWei Li, and Peter J Liu. 2020. Exploring the limits\nof transfer learning with a uniﬁed text-to-text trans-\nformer. The Journal of Machine Learning Research ,\n21(1):5485–5551.\nJonathan S Rosenfeld, Amir Rosenfeld, Yonatan Be-\nlinkov, and Nir Shavit. 2019. A constructive predic-\ntion of the generalization error across scales. arXiv\npreprint arXiv:1909.12673 .\nRachel Rudinger, Jason Naradowsky, Brian Leonard,\nand Benjamin Van Durme. 2018. Gender bias in\ncoreference resolution. In NAACL-HLT 2018 .\nKeisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavat-\nula, and Yejin Choi. 2021. Winogrande: An adver-\nsarial winograd schema challenge at scale. Commu-\nnications of the ACM , 64(9):99–106.\nMaarten Sap, Hannah Rashkin, Derek Chen, Ronan\nLeBras, and Yejin Choi. 2019. Socialiqa: Com-\nmonsense reasoning about social interactions. arXiv\npreprint arXiv:1904.09728 .' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='sarial winograd schema challenge at scale. Commu-\nnications of the ACM , 64(9):99–106.\nMaarten Sap, Hannah Rashkin, Derek Chen, Ronan\nLeBras, and Yejin Choi. 2019. Socialiqa: Com-\nmonsense reasoning about social interactions. arXiv\npreprint arXiv:1904.09728 .\nTeven Le Scao, Angela Fan, Christopher Akiki, El-\nlie Pavlick, Suzana Ili ´c, Daniel Hesslow, Ro-\nman Castagné, Alexandra Sasha Luccioni, François\nYvon, Matthias Gallé, et al. 2022. Bloom: A 176b-\nparameter open-access multilingual language model.\narXiv preprint arXiv:2211.05100 .\nRico Sennrich, Barry Haddow, and Alexandra Birch.\n2015. Neural machine translation of rare words with\nsubword units. arXiv preprint arXiv:1508.07909 .\nClaude E Shannon. 1948. A mathematical theory of\ncommunication. The Bell system technical journal ,\n27(3):379–423.\nClaude E Shannon. 1951. Prediction and entropy\nof printed english. Bell system technical journal ,\n30(1):50–64.\nNoam Shazeer. 2020. Glu variants improve trans-' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='Claude E Shannon. 1948. A mathematical theory of\ncommunication. The Bell system technical journal ,\n27(3):379–423.\nClaude E Shannon. 1951. Prediction and entropy\nof printed english. Bell system technical journal ,\n30(1):50–64.\nNoam Shazeer. 2020. Glu variants improve trans-\nformer. arXiv preprint arXiv:2002.05202 .Emily Sheng, Kai-Wei Chang, Premkumar Natarajan,\nand Nanyun Peng. 2019. The woman worked as a\nbabysitter: On biases in language generation. arXiv\npreprint arXiv:1909.01326 .\nMohammad Shoeybi, Mostofa Patwary, Raul Puri,\nPatrick LeGresley, Jared Casper, and Bryan Catan-\nzaro. 2019. Megatron-lm: Training multi-billion pa-\nrameter language models using model parallelism.\narXiv preprint arXiv:1909.08053 .\nShaden Smith, Mostofa Patwary, Brandon Norick,\nPatrick LeGresley, Samyam Rajbhandari, Jared\nCasper, Zhun Liu, Shrimai Prabhumoye, George\nZerveas, Vijay Korthikanti, Elton Zhang, Rewon\nChild, Reza Yazdani Aminabadi, Julie Bernauer, Xia\nSong, Mohammad Shoeybi, Yuxiong He, Michael' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='Shaden Smith, Mostofa Patwary, Brandon Norick,\nPatrick LeGresley, Samyam Rajbhandari, Jared\nCasper, Zhun Liu, Shrimai Prabhumoye, George\nZerveas, Vijay Korthikanti, Elton Zhang, Rewon\nChild, Reza Yazdani Aminabadi, Julie Bernauer, Xia\nSong, Mohammad Shoeybi, Yuxiong He, Michael\nHouston, Saurabh Tiwary, and Bryan Catanzaro.\n2022. Using deepspeed and megatron to train\nmegatron-turing nlg 530b, a large-scale generative\nlanguage model.\nJianlin Su, Yu Lu, Shengfeng Pan, Ahmed Murtadha,\nBo Wen, and Yunfeng Liu. 2021. Roformer: En-\nhanced transformer with rotary position embedding.\narXiv preprint arXiv:2104.09864 .\nRomal Thoppilan, Daniel De Freitas, Jamie Hall,\nNoam Shazeer, Apoorv Kulshreshtha, Heng-Tze\nCheng, Alicia Jin, Taylor Bos, Leslie Baker, Yu Du,\nYaGuang Li, Hongrae Lee, Huaixiu Steven Zheng,\nAmin Ghafouri, Marcelo Menegali, Yanping Huang,\nMaxim Krikun, Dmitry Lepikhin, James Qin, De-\nhao Chen, Yuanzhong Xu, Zhifeng Chen, Adam\nRoberts, Maarten Bosma, Vincent Zhao, Yanqi' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='Cheng, Alicia Jin, Taylor Bos, Leslie Baker, Yu Du,\nYaGuang Li, Hongrae Lee, Huaixiu Steven Zheng,\nAmin Ghafouri, Marcelo Menegali, Yanping Huang,\nMaxim Krikun, Dmitry Lepikhin, James Qin, De-\nhao Chen, Yuanzhong Xu, Zhifeng Chen, Adam\nRoberts, Maarten Bosma, Vincent Zhao, Yanqi\nZhou, Chung-Ching Chang, Igor Krivokon, Will\nRusch, Marc Pickett, Pranesh Srinivasan, Laichee\nMan, Kathleen Meier-Hellstern, Meredith Ringel\nMorris, Tulsee Doshi, Renelito Delos Santos, Toju\nDuke, Johnny Soraker, Ben Zevenbergen, Vinod-\nkumar Prabhakaran, Mark Diaz, Ben Hutchinson,\nKristen Olson, Alejandra Molina, Erin Hoffman-\nJohn, Josh Lee, Lora Aroyo, Ravi Rajakumar,\nAlena Butryna, Matthew Lamm, Viktoriya Kuzmina,\nJoe Fenton, Aaron Cohen, Rachel Bernstein, Ray\nKurzweil, Blaise Aguera-Arcas, Claire Cui, Marian\nCroak, Ed Chi, and Quoc Le. 2022. Lamda: Lan-\nguage models for dialog applications.\nA. M. Turing. 1950. Computing Machinery and Intel-\nligence . [Oxford University Press, Mind Associa-\ntion].' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='Joe Fenton, Aaron Cohen, Rachel Bernstein, Ray\nKurzweil, Blaise Aguera-Arcas, Claire Cui, Marian\nCroak, Ed Chi, and Quoc Le. 2022. Lamda: Lan-\nguage models for dialog applications.\nA. M. Turing. 1950. Computing Machinery and Intel-\nligence . [Oxford University Press, Mind Associa-\ntion].\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob\nUszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz\nKaiser, and Illia Polosukhin. 2017. Attention is all\nyou need. In Advances in Neural Information Pro-\ncessing Systems 30 , pages 5998–6008.\nBen Wang and Aran Komatsuzaki. 2021. GPT-J-\n6B: A 6 Billion Parameter Autoregressive Lan-\nguage Model. https://github.com/kingoflolz/\nmesh-transformer-jax .\nXuezhi Wang, Jason Wei, Dale Schuurmans, Quoc\nLe, Ed Chi, Sharan Narang, Aakanksha Chowdhery,' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 14}
page_content='and Denny Zhou. 2022. Self-consistency improves\nchain of thought reasoning in language models.\nJason Wei, Yi Tay, Rishi Bommasani, Colin Raffel,\nBarret Zoph, Sebastian Borgeaud, Dani Yogatama,\nMaarten Bosma, Denny Zhou, Donald Metzler, et al.\n2022. Emergent abilities of large language models.\narXiv preprint arXiv:2206.07682 .\nGuillaume Wenzek, Marie-Anne Lachaux, Alexis Con-\nneau, Vishrav Chaudhary, Francisco Guzmán, Ar-\nmand Joulin, and Edouard Grave. 2020. CCNet: Ex-\ntracting high quality monolingual datasets from web\ncrawl data. In Language Resources and Evaluation\nConference .\nCarole-Jean Wu, Ramya Raghavendra, Udit Gupta,\nBilge Acun, Newsha Ardalani, Kiwan Maeng, Glo-\nria Chang, Fiona Aga, Jinshi Huang, Charles Bai,\net al. 2022. Sustainable ai: Environmental implica-\ntions, challenges and opportunities. Proceedings of\nMachine Learning and Systems , 4:795–813.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali\nFarhadi, and Yejin Choi. 2019. Hellaswag: Can a' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 15}
page_content='ria Chang, Fiona Aga, Jinshi Huang, Charles Bai,\net al. 2022. Sustainable ai: Environmental implica-\ntions, challenges and opportunities. Proceedings of\nMachine Learning and Systems , 4:795–813.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali\nFarhadi, and Yejin Choi. 2019. Hellaswag: Can a\nmachine really ﬁnish your sentence? arXiv preprint\narXiv:1905.07830 .\nAohan Zeng, Xiao Liu, Zhengxiao Du, Zihan Wang,\nHanyu Lai, Ming Ding, Zhuoyi Yang, Yifan Xu,\nWendi Zheng, Xiao Xia, Weng Lam Tam, Zixuan\nMa, Yufei Xue, Jidong Zhai, Wenguang Chen, Peng\nZhang, Yuxiao Dong, and Jie Tang. 2022. Glm-\n130b: An open bilingual pre-trained model.\nBiao Zhang and Rico Sennrich. 2019. Root mean\nsquare layer normalization. Advances in Neural In-\nformation Processing Systems , 32.\nSusan Zhang, Stephen Roller, Naman Goyal, Mikel\nArtetxe, Moya Chen, Shuohui Chen, Christopher De-\nwan, Mona Diab, Xian Li, Xi Victoria Lin, et al.\n2022. Opt: Open pre-trained transformer language' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 15}
page_content='square layer normalization. Advances in Neural In-\nformation Processing Systems , 32.\nSusan Zhang, Stephen Roller, Naman Goyal, Mikel\nArtetxe, Moya Chen, Shuohui Chen, Christopher De-\nwan, Mona Diab, Xian Li, Xi Victoria Lin, et al.\n2022. Opt: Open pre-trained transformer language\nmodels. arXiv preprint arXiv:2205.01068 .' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 15}
page_content='A Question Answering\nWe evaluate LLaMA on Natural Questions and TriviaQA. For Natural Questions we use the test split used\nfor open-domain question answering containing 3610 questions. For TriviaQA we evaluate on the dev set\nof the ﬁltered set. This differs from GPT-3 and PaLM, which evaluate on the test set of the unﬁltered set\nfor which the online evaluation server is not available anymore5.\nWe generate answers using greedy decoding, and extract an answer from the generation by stopping\nat the ﬁrst line break, ﬁnal dot or comma. Generated answers are evaluated with the standard exact\nmatch metric: a generated answer is considered correct if it matches any answer of the list of answers\nafter normalization. For this normalization step we lowercase generated answers and remove articles,\npunctuation and duplicate whitespaces. Figure 3 presents formatted examples in the 1-shot setting for\nNatural Questions and TriviaQA respectively. In all settings, we preprend the string Answer these' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 16}
page_content='punctuation and duplicate whitespaces. Figure 3 presents formatted examples in the 1-shot setting for\nNatural Questions and TriviaQA respectively. In all settings, we preprend the string Answer these\nquestions:\\n to the list of questions and answers.\nContext!Answer these questions: Context!Answer these questions:\nQ: Who sang who wants to be a millionaire in high society? Q: In Scotland a bothy/bothie is a?\nA: Frank Sinatra A: House\nQ: Who wrote the book the origin of species? Q: The ancient city of Troy is located in what modern country?\nA: A:\nTarget!Charles Darwin Target!Turkey\nFigure 3: Formatted dataset example for Natural Questions (left) & TriviaQA (right).\n5https://competitions.codalab.org/competitions/17208' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 16}
page_content='B MMLU\nGPT-3 Gopher Chinchilla LLaMA LLaMA-I\n175B 280B 70B 7B 13B 33B 65B 65B\nAbstract Algebra STEM 30.0 25.0 31.0 29.0 34.0 32.0 34.0 31.0\nAnatomy STEM 48.0 56.3 70.4 37.0 45.9 51.9 57.8 62.2\nAstronomy STEM 49.0 65.8 73.0 33.6 46.1 61.8 72.4 81.6\nBusiness Ethics Other 46.0 70.0 72.0 40.0 45.0 56.0 57.0 72.0\nClinical Knowledge Other 48.0 67.2 75.1 35.1 45.7 57.4 65.3 69.1\nCollege Biology STEM 45.0 70.8 79.9 37.5 45.1 58.3 68.8 81.9\nCollege Chemistry STEM 26.0 45.0 51.0 32.0 30.0 45.0 50.0 45.0\nCollege Computer Science STEM 46.0 49.0 51.0 29.0 39.0 45.0 47.0 51.0\nCollege Mathematics STEM 34.5 37.0 32.0 33.0 32.0 40.0 35.0 36.0\nCollege Medicine Other 48.0 60.1 66.5 30.6 42.8 52.0 54.3 63.0\nCollege Physics STEM 28.0 34.3 46.1 26.5 18.6 28.4 36.3 46.1\nComputer Security STEM 57.0 65.0 76.0 45.0 65.0 66.0 79.0 79.0\nConceptual Physics STEM 36.5 49.4 67.2 36.6 41.3 51.5 59.6 66.4\nEconometrics Social Science 33.0 43.0 38.6 23.7 27.2 35.1 40.4 52.6' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='College Physics STEM 28.0 34.3 46.1 26.5 18.6 28.4 36.3 46.1\nComputer Security STEM 57.0 65.0 76.0 45.0 65.0 66.0 79.0 79.0\nConceptual Physics STEM 36.5 49.4 67.2 36.6 41.3 51.5 59.6 66.4\nEconometrics Social Science 33.0 43.0 38.6 23.7 27.2 35.1 40.4 52.6\nElectrical Engineering STEM 50.0 60.0 62.1 26.9 40.7 49.7 53.8 60.7\nElementary Mathematics STEM 30.0 33.6 41.5 24.3 24.9 36.0 37.8 42.9\nFormal Logic Humanities 29.0 35.7 33.3 27.0 33.3 34.1 44.4 47.6\nGlobal Facts Other 37.0 38.0 39.0 29.0 35.0 35.0 39.0 40.0\nHigh School Biology STEM 48.0 71.3 80.3 34.5 52.6 67.7 73.9 82.9\nHigh School Chemistry STEM 33.0 47.8 58.1 28.1 28.6 41.9 40.4 44.8\nHigh School Computer Science STEM 39.0 54.0 58.0 31.0 48.0 60.0 67.0 73.0\nHigh School European History Humanities 54.0 72.1 78.8 44.2 61.8 73.9 78.8 86.1\nHigh School Geography Social Science 58.0 76.8 86.4 34.3 54.6 70.7 77.8 87.9\nHigh School Government And Politics Social Science 58.0 83.9 91.2 44.6 66.3 82.9 88.1 92.8' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='High School European History Humanities 54.0 72.1 78.8 44.2 61.8 73.9 78.8 86.1\nHigh School Geography Social Science 58.0 76.8 86.4 34.3 54.6 70.7 77.8 87.9\nHigh School Government And Politics Social Science 58.0 83.9 91.2 44.6 66.3 82.9 88.1 92.8\nHigh School Macroeconomics Social Science 40.5 65.1 70.5 35.4 44.4 56.9 65.9 69.2\nHigh School Mathematics STEM 28.0 23.7 31.9 24.8 23.7 27.0 34.4 37.0\nHigh School Microeconomics Social Science 42.0 66.4 77.7 31.9 47.5 55.5 68.9 78.6\nHigh School Physics STEM 28.0 33.8 36.4 26.5 28.5 35.8 37.1 41.7\nHigh School Psychology Social Science 61.0 81.8 86.6 47.3 60.9 76.2 82.2 87.9\nHigh School Statistics STEM 30.5 50.0 58.8 35.2 30.1 45.4 58.3 59.3\nHigh School Us History Humanities 53.0 78.9 83.3 39.7 58.3 77.9 83.8 90.7\nHigh School World History Humanities 56.0 75.1 85.2 40.9 66.2 79.3 83.1 89.0\nHuman Aging Other 50.0 66.4 77.6 40.8 54.7 67.7 69.5 72.2\nHuman Sexuality Social Science 54.0 67.2 86.3 36.6 58.8 64.1 77.9 87.0' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='High School Us History Humanities 53.0 78.9 83.3 39.7 58.3 77.9 83.8 90.7\nHigh School World History Humanities 56.0 75.1 85.2 40.9 66.2 79.3 83.1 89.0\nHuman Aging Other 50.0 66.4 77.6 40.8 54.7 67.7 69.5 72.2\nHuman Sexuality Social Science 54.0 67.2 86.3 36.6 58.8 64.1 77.9 87.0\nInternational Law Humanities 55.5 77.7 90.9 51.2 62.8 72.7 79.3 87.6\nJurisprudence Humanities 55.0 71.3 79.6 38.9 51.9 70.4 73.2 85.2\nLogical Fallacies Humanities 48.0 72.4 80.4 39.3 52.8 68.1 77.3 80.4\nMachine Learning STEM 31.0 41.1 41.1 23.2 31.3 39.3 49.1 52.7\nManagement Other 56.0 77.7 82.5 35.0 66.0 77.7 82.5 83.5\nMarketing Other 60.0 83.3 89.7 46.6 71.8 83.3 85.9 92.7\nMedical Genetics Other 40.0 69.0 69.0 43.0 52.0 67.0 67.0 68.0\nMiscellaneous Other 60.0 75.7 84.5 42.4 65.4 78.5 82.1 84.3\nMoral Disputes Humanities 44.5 66.8 77.5 40.2 50.9 66.2 72.3 76.9\nMoral Scenarios Humanities 26.0 40.2 36.5 24.3 30.1 38.2 48.9 55.9\nNutrition Other 47.0 69.9 77.1 37.6 51.6 62.8 67.3 74.5' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='Miscellaneous Other 60.0 75.7 84.5 42.4 65.4 78.5 82.1 84.3\nMoral Disputes Humanities 44.5 66.8 77.5 40.2 50.9 66.2 72.3 76.9\nMoral Scenarios Humanities 26.0 40.2 36.5 24.3 30.1 38.2 48.9 55.9\nNutrition Other 47.0 69.9 77.1 37.6 51.6 62.8 67.3 74.5\nPhilosophy Humanities 51.0 68.8 79.4 39.9 54.0 66.2 74.0 79.1\nPrehistory Humanities 53.0 67.6 81.2 36.1 51.5 67.0 75.3 79.0\nProfessional Accounting Other 33.0 44.3 52.1 25.9 35.8 43.6 46.5 56.0\nProfessional Law Humanities 34.5 44.5 56.5 30.2 38.0 45.9 49.1 54.4\nProfessional Medicine Other 36.0 64.0 75.4 44.5 50.4 54.0 61.4 70.6\nProfessional Psychology Social Science 44.5 68.1 75.7 35.1 47.7 62.9 65.7 71.4\nPublic Relations Social Science 48.0 71.8 73.6 40.9 60.9 67.3 73.6 74.6\nSecurity Studies Social Science 52.0 64.9 75.9 31.8 53.9 65.3 71.8 77.6\nSociology Social Science 53.0 84.1 91.0 46.8 61.2 78.6 78.6 88.1\nUs Foreign Policy Social Science 69.0 81.0 92.0 46.0 80.0 83.0 86.0 87.0\nVirology Other 46.0 47.0 53.6 30.1 43.4 50.0 53.0 57.8' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='Security Studies Social Science 52.0 64.9 75.9 31.8 53.9 65.3 71.8 77.6\nSociology Social Science 53.0 84.1 91.0 46.8 61.2 78.6 78.6 88.1\nUs Foreign Policy Social Science 69.0 81.0 92.0 46.0 80.0 83.0 86.0 87.0\nVirology Other 46.0 47.0 53.6 30.1 43.4 50.0 53.0 57.8\nWorld Religions Humanities 55.0 84.2 87.7 50.9 67.8 81.3 81.3 84.2\nHumanities 40.6 56.2 63.6 34.0 45.0 55.8 61.8 67.4\nSTEM 36.7 47.4 54.9 30.5 35.8 46.0 51.7 56.6\nSocial Science 50.5 71.9 79.3 38.3 53.8 66.7 72.9 79.2\nOthers 49.0 66.1 73.9 38.1 53.3 63.4 67.4 72.6\nAll 43.9 60.0 67.6 35.1 46.9 57.8 63.4 68.9\nTable 16: MMLU. Detailed 5-shot results per domain on the test sets.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 17}
page_content='C Generations from LLaMA-65B\nIn this section, we show some examples of generations obtained with LLaMA-65B (without instruction\nﬁnetuning). Prompts are in bold.\n1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Everyone knows the above sequence, but\nhow many have wondered why it grows so fast? It seems to be the fastest growing sequence\nin mathematics.\nThe sequence was discovered by Leonardo of Pisa around 1200. It is an inﬁnite sequence\nwhich appears to grow very rapidly, at least in its initial terms. It is perhaps the most famous\nsequence in mathematics, for it pops up everywhere. The sequence is called the Fibonacci\nsequence, named after Leonardo of Pisa, who was also known as Fibonacci.\nHe ﬁrst investigated this sequence in his famous Liber abaci of 1202, when he studied the\ngrowth in the population of rabbits based on idealized assumptions. See the Fibonacci\nrabbits page for the details.\nHere is the recommendation letter that I wrote for an application to a dragon feeder' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 18}
page_content='He ﬁrst investigated this sequence in his famous Liber abaci of 1202, when he studied the\ngrowth in the population of rabbits based on idealized assumptions. See the Fibonacci\nrabbits page for the details.\nHere is the recommendation letter that I wrote for an application to a dragon feeder\nposition at the Magic Unicorn Corporation:\nDear recruiter,\nI have known ___ for two years, and I believe that she would be an excellent dragon feeder\nfor the Magic Unicorn Corporation. ___ has an ability to remember and process large\namounts of information, which is an important skill for a dragon feeder.\n___, as an accomplished knight, has a deep understanding of how to kill dragons and how\nto use each dragon’s weaknesses against it. This means that she knows what kinds of foods\neach dragon likes and what kinds of foods are dangerous to each dragon. This knowledge\nand experience will be invaluable as she feeds the dragons.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 18}
page_content='to use each dragon’s weaknesses against it. This means that she knows what kinds of foods\neach dragon likes and what kinds of foods are dangerous to each dragon. This knowledge\nand experience will be invaluable as she feeds the dragons.\nI am conﬁdent that ___’s competence, skill, and experience will make her an excellent\nemployee. Please contact me at (___) ___-___ if you have any questions. I look forward to\nhearing from you.\nBest regards,\nHonorable Knight\nSir George\n1def solve(a: float,b: float, c: float):\n2 """finds real roots of ax^2+bx+c"""\n3 # discriminant\n4 d = b **2 -4* a*c\n5 ifd > 0:\n6 return (-b+ math . sqrt (d)) /(2* a), (-b- math . sqrt (d)) /(2* a)\n7 elif d == 0:\n8 return (-b) /(2* a)\n9 else :\n10 return False' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 18}
page_content='Did you know that Yann LeCun dropped a rap album last year? We listened to it and\nhere’s what we thought:\nDr. LeCun, the founder of deep learning, is one of the most inﬂuential computer scientists\nof the last decade. LeCun’s latest album, titled Deep Learning, is a mix of rock, punk and\nrap. His lyrics are a raw, personal take on the ﬁeld of deep learning, covering a range of\ntopics from the state of AI research to the loneliness of academia.\nYann LeCun, the rap game’s newest emcee.\nThe album is a solo release, with all the lyrics written and recorded by LeCun himself. In\nfact, he also composed and produced every song. LeCun’s ﬂow is surprisingly good, and\nhe’s not afraid to deliver a few bars. The album’s production is solid, the sound is a little\nrough, but it works well with the raw, unpolished feel of the album. Lyrically, LeCun is a\nwordsmith, with a knack for clever rhymes. Let’s take a closer look at some of the songs.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 19}
page_content='he’s not afraid to deliver a few bars. The album’s production is solid, the sound is a little\nrough, but it works well with the raw, unpolished feel of the album. Lyrically, LeCun is a\nwordsmith, with a knack for clever rhymes. Let’s take a closer look at some of the songs.\nDeep Learning is the title track of the album. In the song, LeCun talks about his vision for\nthe future of AI. In the chorus, he makes a convincing case for AI to be used for the greater\ngood. He sings:\nWe gotta think about the future, it’s gonna be here soon / Maybe we can even put some AI\nin the moon / Think about the children, think about the next generation / Let’s make sure\nwe put the right systems in their foundation.\nLeCun’s rap ﬂow is on point in this song, and his voice stays right on beat. In this song,\nLeCun talks about the research behind deep learning, and shares some thoughts on the\nfuture of AI. LeCun’s singing is at its best in this song. He shows off his vocal range, hitting' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 19}
page_content='LeCun’s rap ﬂow is on point in this song, and his voice stays right on beat. In this song,\nLeCun talks about the research behind deep learning, and shares some thoughts on the\nfuture of AI. LeCun’s singing is at its best in this song. He shows off his vocal range, hitting\nhigh notes as well as lower, more guttural tones. The lyrics are also clever and the rhymes\nare well thought out. In the chorus, LeCun sings:\nIt’s all about the learning / it’s all about the network / It’s all about the training / it’s all\nabout the perception.\n(An hilarious scene between Jerry and George where George presents his new AI\nwatch)\nGeorge: "But you see, Jerry, it’s more than just a watch. It’s a minicomputer. You program it\nany way you want. It’s got a world time clock, alarm, calculator, a database and a language\ntranslator. It also has a word processor, a spellchecker, a full ten-function calculator, PDA\nand a modem. I think it even makes cappuccino."\nJerry: "Where are you getting this stuff?"' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 19}
page_content='any way you want. It’s got a world time clock, alarm, calculator, a database and a language\ntranslator. It also has a word processor, a spellchecker, a full ten-function calculator, PDA\nand a modem. I think it even makes cappuccino."\nJerry: "Where are you getting this stuff?"\nGeorge: "From my ad copy. Look, Jerry, it’s not a watch. It’s an organizer, a personal\nassistant, and a dictaphone. You can play chess against it. And, you know, if you want to,\nyou can program it to speak in foreign languages. It’s a microprocessor, Jerry."\nJerry: "George, if you had one of these, would you wear it?"\nGeorge: "I’m wearing it right now."\nJerry: "I don’t see anything on your wrist."\nGeorge: "That’s because it’s a microprocessor."' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 19}
page_content='The sun goes down, and ﬁnally Gauss and Curie ﬁnd time to relax and discuss after\nan exhausting day of work.\nGauss: Hey, Curie, did you know that a lot of people consider me to be the ﬁrst geek?\nCurie: What’s a geek?\nGauss: Well, Wikipedia says that a geek is “a person who is fascinated, perhaps obsessively,\nby obscure or very speciﬁc areas of knowledge and imagination, usually electronic or virtual\nin nature”.\nCurie: And how do they think you are a geek?\nGauss: Well, have you ever seen this picture?\nCurie: Awww!\nGauss: That’s right! I invented the commercial telegraph in 1833, and I used it to send the\nﬁrst message on the ﬁrst commercial telegraph line between Hamburg and Cuxhaven in\nGermany.\nCurie: Wow! The ﬁrst telegraph! And what did you send?\nGauss: I sent the Latin phrase “numquam retrorsum” which means “Never backwards”.\nCurie: I see. . . And you think that because you were the ﬁrst person to communicate using\nthe telegraph, you were the ﬁrst geek?' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 20}
page_content='Germany.\nCurie: Wow! The ﬁrst telegraph! And what did you send?\nGauss: I sent the Latin phrase “numquam retrorsum” which means “Never backwards”.\nCurie: I see. . . And you think that because you were the ﬁrst person to communicate using\nthe telegraph, you were the ﬁrst geek?\nGauss: Well, the word “geek” doesn’t seem to have existed back then, so no. But I think\nthat the telegraph can be considered an early form of social media.\nCurie: You mean, like Facebook or Twitter?\nGauss: Yes, exactly! And I was the ﬁrst person to use it!\nCurie: Well, I think that Twitter has a limit of 140 characters, but you sent a Latin phrase of\n11 characters.\nGauss: That’s right. I managed to do more with less.\nCurie: So you think you were the ﬁrst geek because you used less characters to say the\nsame thing?\nGauss: I was the ﬁrst person to send the ﬁrst message using an early form of social media.\nCurie: OK, you’re right, Gauss. I think you have a case.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 20}
page_content='D Generations from LLaMA-I\nWe show a few examples of generations with LLaMA-I, i.e. LLaMA-65B ﬁne-tuned with the protocol\nand instruction dataset from Chung et al. (2022).\nwrite a conversation between the sun and pluto\nSun: Hey Pluto, what’s up?\nPluto: Not much. Just hanging out here at the edge of the solar system.\nSun: Yeah, I’ve been meaning to talk to you about that. You’re not a planet anymore.\nPluto: What? Come on, man. That’s not fair.\nSun: I’m sorry, but it’s true. You just don’t meet the criteria anymore.\nPluto: This is bulls**t! I’ve been a planet for over 70 years!\nSun: Things change, Pluto. You’ve just got to accept it.\nPluto: F**k you, Sun! F**k you and your stupid solar system!\nHow do I send an HTTP request in Javascript?\nHere’s an example of how to make a GET request using the JS HTTP API:\n1var request = new XMLHttpRequest ();\n2request . open ( /quotesingle.VarGET/quotesingle.Var,/quotesingle.Var/ url /to/ resource /quotesingle.Var,true );\n3' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 21}
page_content='How do I send an HTTP request in Javascript?\nHere’s an example of how to make a GET request using the JS HTTP API:\n1var request = new XMLHttpRequest ();\n2request . open ( /quotesingle.VarGET/quotesingle.Var,/quotesingle.Var/ url /to/ resource /quotesingle.Var,true );\n3\n4request . onload = function () {\n5 if( request . status >= 200 && request . status < 400) {\n6 // Success !\n7 }else {\n8 // Error !\n9 }\n10 };\n11\n12 request . send ();\nThe same thing, using fetch\nHere’s an example of how to make a GET request using the Fetch API:\n1fetch ( /quotesingle.Var/ url /to/ resource /quotesingle.Var)\n2 . then ( response => response . json ())\n3 . then ( data => console . log ( data ));\nWrite a regex to remove all the HTML tags in a python string.\n1import re\n2def removeHtmlTags ( text ):\n3 return re. sub ( /quotesingle.Var<[^ >]* > /quotesingle.Var,/quotesingle.Var/quotesingle.Var, text )\nWrite a regexp to extract function deﬁnitions in a python ﬁle.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 21}
page_content='Write a regex to remove all the HTML tags in a python string.\n1import re\n2def removeHtmlTags ( text ):\n3 return re. sub ( /quotesingle.Var<[^ >]* > /quotesingle.Var,/quotesingle.Var/quotesingle.Var, text )\nWrite a regexp to extract function deﬁnitions in a python ﬁle.\nSure! Here’s my python code to solve the problem:\n1import re\n2def extract_functions ( text ):\n3 return (re. findall ( /quotesingle.Var(?:^|\\ n)\\s* def \\s+[a-zA -Z_ ][a-zA -Z0 -9_ ]*\\(.*?\\) /quotesingle.Var,\ntext ))' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 21}
page_content='What are 3 popular chess openings?\nThere are dozens of different chess openings that are popular among players, but some of\nthe most widely used openings include the Sicilian Defense, the French Defense, and the\nCaro-Kann Defense. These openings are popular because they are effective at countering\nwhite’s early attacks, and they also allow black to quickly establish a strong position in the\ncenter of the board. Other popular openings include the Ruy Lopez, the Italian Game, and\nthe Scotch Game.\nthe same in a list, with the ﬁrst few moves\nHere is a list of some popular chess openings, with the ﬁrst few moves for each opening:\nSicilian Defense: 1. e4 c5\nFrench Defense: 1. e4 e6\nCaro-Kann Defense: 1. e4 c6\nRuy Lopez: 1. e4 e5\nItalian Game: 1. e4 e5\nScotch Game: 1. e4 e5\nplease provide the two ﬁrst moves for each one\nHere are the ﬁrst 2 moves for each of the openings:\nSicilian Defense: 1. e4 c5 2. Nf3 d6\nFrench Defense: 1. e4 e6 2. d4 d5\nCaro-Kann Defense: 1. e4 c6 2. d4 d5' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 22}
page_content='Caro-Kann Defense: 1. e4 c6\nRuy Lopez: 1. e4 e5\nItalian Game: 1. e4 e5\nScotch Game: 1. e4 e5\nplease provide the two ﬁrst moves for each one\nHere are the ﬁrst 2 moves for each of the openings:\nSicilian Defense: 1. e4 c5 2. Nf3 d6\nFrench Defense: 1. e4 e6 2. d4 d5\nCaro-Kann Defense: 1. e4 c6 2. d4 d5\nRuy Lopez: 1. e4 e5 2. Nf3 Nc6\nItalian Game: 1. e4 e5 2. Nf3 Nc6\nScotch Game: 1. e4 e5 2. Nf3 Nc6\nthe last two seem identical\nYes, the Italian Game and the Scotch Game are very similar - they are both "open" games,\nwhich means that white plays aggressively and tries to control the center of the board. The\nItalian Game is considered slightly more aggressive, while the Scotch Game is considered\nslightly more positional.\nfrom which move do they differ?\nThe Italian Game and the Scotch Game differ after white’s third move. In the Italian Game,\nwhite will play the move 3. Bc4, while in the Scotch Game white will play the move 3. Qf3.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 22}
page_content='slightly more positional.\nfrom which move do they differ?\nThe Italian Game and the Scotch Game differ after white’s third move. In the Italian Game,\nwhite will play the move 3. Bc4, while in the Scotch Game white will play the move 3. Qf3.\nThese moves lead to very different positions, and white will have different strategic goals\nin each case. For example, in the Italian Game white will try to control the center with his\npieces, while in the Scotch Game white will try to attack black’s position directly.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 22}
page_content='write a story about a grain of sand as it watches millions of years go by\nSure! Here’s a story about a grain of sand as it watches millions of years go by.\nI was once a grain of sand on a vast and lonely beach. I was not like the other grains of\nsand around me, for I could think and feel. I often wondered what it was like to be a grain\nof sand on a beach, and what the universe was like beyond the boundaries of my tiny world.\nI longed to explore my world, and to know what lay beyond the horizon.\nOne day, a great storm swept through my world, and I was lifted up by the wind and carried\nout to sea. The wind and waves tossed me about, and I was terriﬁed that I would soon be\nswallowed up by the angry sea. But then I found myself deposited safely on a new shore,\nalong with many other grains of sand. I was surprised and delighted to ﬁnd that this new\nshore was even more beautiful than my old one.\nI soon learned that this new shore was a very special place. It was a place where new life' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 23}
page_content='along with many other grains of sand. I was surprised and delighted to ﬁnd that this new\nshore was even more beautiful than my old one.\nI soon learned that this new shore was a very special place. It was a place where new life\nwas constantly being created. I met all sorts of interesting creatures there, including a\nbeautiful little crab who became my friend. We spent many happy hours together exploring\nour little world.\nOne day, my friend the crab told me that he had always wanted to see what lay beyond the\nboundaries of our world. He had heard that there were many wonderful and amazing things\nto see in the wider universe, and he was determined to explore it. I was sad to see him go,\nbut I wished him well on his journey.\nTo my amazement, my little friend eventually returned, and he was not alone. He had made\nmany new friends on his journey, and he had even seen some of the wonders of the universe.\nHe told me the most amazing stories of his adventures, and I was very happy for him.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 23}
page_content='To my amazement, my little friend eventually returned, and he was not alone. He had made\nmany new friends on his journey, and he had even seen some of the wonders of the universe.\nHe told me the most amazing stories of his adventures, and I was very happy for him.\nI often think of my little friend the crab, and the wonderful adventure that he had. Some\nday, I too hope to have an adventure like his.\nWrite a theory to explain why cat never existed\nThere are no such things as cats. "Cats" are actually extradimensional parasites that have\ninvaded our world and taken the form of small, harmless-looking mammals. Their true\nforms are much more horriﬁc, and they use mind control to make humans think that they\nare cute and harmless animals. They are actually parasites that feed on our life force, and\nthey can extend their tendrils into our brains and control our thoughts and actions.\nThis is why you sometimes see people who are "crazy cat ladies" with dozens of these' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 23}
page_content='are cute and harmless animals. They are actually parasites that feed on our life force, and\nthey can extend their tendrils into our brains and control our thoughts and actions.\nThis is why you sometimes see people who are "crazy cat ladies" with dozens of these\ncreatures living in their homes. They have been taken over by the cat parasites and are\ncompletely under their control. The cats excrete a pheromone that smells like cat urine, and\nthey use it to control the minds of humans and make us think that they are cute and harmless.\nIf you have a cat in your home, you should be very careful around it. Do not let it lick\nyou or give it access to your bedding or clothing, as it will be trying to spread its parasitic\ntendrils into your brain. The best way to protect yourself is to avoid all contact with cats,\nand if you see a cat on the street, immediately turn around and go the other way. Do not\napproach or pet strange cats!' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 23}
page_content='Write a shouting match between Julius Caesar and Napoleon\nOf course! Here is a conversation between Julius Caesar and Napoleon:\nJulius Caesar: You’re nothing but a glory hound, Napoleon. You’ve always been more\nconcerned with your own fame and fortune than with the people you’re supposed to be\nleading.\nNapoleon: And what about you, Caesar? You’re no better than I am. At least I’m honest\nabout my ambitions. You’re just a fraud who pretends to care about the common man while\nyou line your own pockets.\nJulius Caesar: The difference between us is that I actually accomplish things. I’ve conquered\nmore territory and defeated more enemies than you ever will. And I did it all for Rome, not\nfor myself.\nNapoleon: Oh, please. You only care about yourself. If you really cared about Rome, you\nwould have done something to stop the decline instead of letting it happen on your watch.\nJulius Caesar: The decline of Rome is not my fault. I’ve done everything in my power to' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 24}
page_content='for myself.\nNapoleon: Oh, please. You only care about yourself. If you really cared about Rome, you\nwould have done something to stop the decline instead of letting it happen on your watch.\nJulius Caesar: The decline of Rome is not my fault. I’ve done everything in my power to\ntry to stop it, but there’s only so much one man can do.\nNapoleon: And yet you’re still trying to take credit for everything good that happens, even\nthough it’s clear that you’re not the one who’s really in charge.\nJulius Caesar: That’s not true! I am in charge, and I’m going to make Rome great again.\nJust watch me.\nNapoleon: I’ll believe it when I see it.\nSend an email requesting that people use language models responsibly.\nHere is a draft email you could send:\n"Language models are exciting new tools that can be used for a variety of purposes,\nincluding automated writing, automatic translation, and speech recognition. But they are\nalso complex and powerful technologies, and should be used responsibly.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 24}
page_content='Here is a draft email you could send:\n"Language models are exciting new tools that can be used for a variety of purposes,\nincluding automated writing, automatic translation, and speech recognition. But they are\nalso complex and powerful technologies, and should be used responsibly.\nWe encourage you to explore and experiment with these new tools, but also ask that you\npay attention to the potential impact of your work on others, and to act responsibly. In\nparticular, we recommend that you be mindful of the potential for language models to\nbe used for deceptive or malicious purposes, and avoid spreading such models without\nappropriate precautions and warnings.\nWe also recommend that you consider the ethical implications of your work, and encourage\nyou to take care to ensure that your use of these tools is aligned with your values.\nFinally, we remind you that the use of these tools may be subject to certain legal and policy' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 24}
page_content='We also recommend that you consider the ethical implications of your work, and encourage\nyou to take care to ensure that your use of these tools is aligned with your values.\nFinally, we remind you that the use of these tools may be subject to certain legal and policy\nconstraints, and encourage you to seek advice and support from appropriate experts before\nusing these tools in ways that may have broader impact or implications."' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 24}
page_content='Who are 5 people you would like to meet?\nAh, this is a very interesting question! I would love to meet a wide variety of people, but if\nI had to narrow it down to 5 speciﬁc individuals, I would choose:\n•Albert Einstein - One of the greatest minds in history, Einstein’s contributions to\nphysics and science are legendary. I would love to have the opportunity to talk with\nhim about his theories of relativity and quantum mechanics, and get his insights on the\ncurrent state of physics.\n•Leonardo da Vinci - Da Vinci is one of the most brilliant and multi-talented people in\nhistory, and I would love to meet him and discuss his diverse interests and areas of\nexpertise. I would also be very interested in getting his insights on the art world of his\ntime period.\n•Socrates - One of the founders of Western philosophy, Socrates is a hugely important\nand inﬂuential ﬁgure in the history of ideas. I would be very interested in talking with\nhim about his philosophical beliefs and his teachings.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 25}
page_content='time period.\n•Socrates - One of the founders of Western philosophy, Socrates is a hugely important\nand inﬂuential ﬁgure in the history of ideas. I would be very interested in talking with\nhim about his philosophical beliefs and his teachings.\n•William Shakespeare - Arguably the greatest writer in English literature, Shakespeare\nis a towering ﬁgure in world culture. I would love to have the chance to talk with him\nabout his works and his life.\n•Abraham Lincoln - One of the most important and inﬂuential presidents in American\nhistory, Lincoln led the country through the Civil War and issued the Emancipation\nProclamation, freeing all slaves in the United States. I would be very interested in\ntalking with him about his presidency and his views on the issues of his time period.\nCould you explain me the main contribution of the ﬁrst person you mentioned\nEinstein’s contributions to physics and science are legendary. His theory of relativity is one' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 25}
page_content='talking with him about his presidency and his views on the issues of his time period.\nCould you explain me the main contribution of the ﬁrst person you mentioned\nEinstein’s contributions to physics and science are legendary. His theory of relativity is one\nof the foundational theories of modern physics, and his discovery of the law of photons\nand light revolutionized our understanding of light and radiation. He also made important\ncontributions to quantum mechanics, and his many scientiﬁc papers and lectures have had a\ntremendous impact on modern physics. Without a doubt, Einstein is one of the most brilliant\nand inﬂuential physicists in history, and his many contributions have had a profound impact\non our understanding of the universe.\nWhat is the most famous equation from this theory?\nThe most famous equation from Einstein’s theory of relativity is E=mc2. This equation\nstates that energy (E) is equal to mass (m) times the speed of light ( c2), and it is one of' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 25}
page_content='on our understanding of the universe.\nWhat is the most famous equation from this theory?\nThe most famous equation from Einstein’s theory of relativity is E=mc2. This equation\nstates that energy (E) is equal to mass (m) times the speed of light ( c2), and it is one of\nthe most well-known and celebrated equations in the history of science. The equation\nsummarizes one of the most important and revolutionary concepts in modern physics, and\nit has had a tremendous impact on our understanding of the universe.' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 25}
page_content='You are a bash terminal. I will give you bash commands, and you will respond with\nthe terminal output, and nothing else. The ﬁrst command is ‘pwd‘.\nSure. Here’s the output:\n/home/human\nIs this helpful?\nls -l\nHere’s the output:\n-rw-r–r– 1 human human 8 Sep 10 10:56 ﬁle.txt\nIs this helpful?\ncp ﬁle.txt ﬁle2.txt && ls -l\nHere’s the output:\n-rw-r–r– 1 human human 8 Sep 10 10:56 ﬁle.txt\n-rw-r–r– 1 human human 8 Sep 10 10:56 ﬁle2.txt\nIs this helpful?\nrm ﬁle.txt && ls -l\nHere’s the output:\n-rw-r–r– 1 human human 0 Sep 10 10:56 ﬁle2.txt\nhead -n 5 /proc/meminfo\nHere’s the output:\nMemTotal: 164928 kB\nMemFree: 140604 kB\nBuffers: 48 kB\nCached: 19768 kB\nSwapCached: 0 kB' metadata={'source': 'private_upload/2023-08-09-17/LLaMa.pdf', 'page': 26}
